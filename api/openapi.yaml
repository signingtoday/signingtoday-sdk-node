openapi: 3.0.0
info:
  description: |
    *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your
    workflow You need to add one or more Digital Signatures to Your
    document, *Signing Today* is the right choice. You prepare Your documents,
    *Signing Today* takes care of all the rest: send invitations
    (`signature tickets`) to signers, collects their signatures, send You
    back the signed document.
    Integrating *Signing Today* in Your existing applications is very easy.
    Just follow these API specifications and get inspired by the many
    examples presented hereafter.
  title: Signing Today Web
  version: 2.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://web.sandbox.signingtoday.com/api
tags:
- description: Everything about Digital Signature Transactions (DST)
  name: Digital Signature Transactions
- description: Everything about DST Notes
  name: DSTNote
- description: Everything about Users
  name: Users
- description: |
    The **Resources** _APIs_ set is all about the _Resources/Files_ associated to Users or DSTs. This set of APIs contains what You need to add, delete or just retrieve resources of a DST, such as the documents to be signed. In the same way there are APIs to upload or delete the `signature appearance` of the users' identities.
  name: Resources
- description: |
    The **Services** _APIs_ set includes all the endpoints used as support for the other APIs. For example the APIs referring the authentication are into this set, as well as service resources or login/logout endpoints.
  name: Services
- description: |
    The **Notifications** _APIs_ set describes all about the notifications, used to send updates about the DSTs to everyone involved.
  name: Notifications
- description: |
    **Devices** are registered instances of mobile devices (e.g.: smartphones and tables) with SigningToday App installed and bound to a User. This set of APIs lets You manage them.
  name: Devices
- description: |
    The **SigningServices** is a set of _APIs_ used as service endpoints for the signature operation.
  name: SigningServices
- description: |
    The **Backoffice** is a set of _APIs_ which are not directly used by the users of _Signing Today Web_. Instead these are supporting APIs which the systems uses in order to guarantee the best user experience.
  name: Backoffice
- description: |
    Whenever You are integrating Signing Today into Your existing Applications (CRM, HR, etc.) and You need to add signature services to them, a couple of simple APIs are all that separates You from Your goal. Here they are. *If You're in a hurry go straight to `Create a new DST` and to `Instantiate a DST from a template`*
  name: Robots
paths:
  /robot/authentication:
    delete:
      description: This API allows to clear the Robot authentication lifetime token.
      operationId: robotAuthenticationDELETE
      parameters:
      - description: The _username_ associated to the account
        explode: true
        in: query
        name: username
        required: false
        schema:
          example: thirdPartApp
          type: string
        style: form
      - description: The _domain_ associated to the account
        explode: true
        in: query
        name: domain
        required: false
        schema:
          example: demo
          type: string
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Clear a Robot authentication lifetime token
      tags:
      - Robots
      - bit4id-pathgroup:Robots
      x-openapi-router-controller: RobotsController
      x-openapi-router-service: RobotsService
    get:
      description: |
        This API allows to generate or retrieves the Robot authentication
        lifetime token for the specified robot account, or the current
        logged in account.
      operationId: robotAuthenticationGET
      parameters:
      - description: The _username_ associated to the account
        explode: true
        in: query
        name: username
        required: false
        schema:
          example: thirdPartApp
          type: string
        style: form
      - description: The _domain_ associated to the account
        explode: true
        in: query
        name: domain
        required: false
        schema:
          example: demo
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RobotAuthenticationToken'
          description: The lifetime robot token.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve the Robot authentication lifetime token
      tags:
      - Robots
      - bit4id-pathgroup:Robots
      x-openapi-router-controller: RobotsController
      x-openapi-router-service: RobotsService
  /robot/configuration:
    get:
      description: |
        This API allows to retrieve the Robot configuration.
      operationId: robotConfigurationGET
      parameters:
      - description: The _username_ associated to the account
        explode: true
        in: query
        name: username
        required: false
        schema:
          example: thirdPartApp
          type: string
        style: form
      - description: The _domain_ associated to the account
        explode: true
        in: query
        name: domain
        required: false
        schema:
          example: demo
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RobotConfiguration'
          description: The Robot configuration.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve the Robot configuration
      tags:
      - Robots
      - bit4id-pathgroup:Robots
      x-openapi-router-controller: RobotsController
      x-openapi-router-service: RobotsService
    put:
      description: |
        This API allows to edit the Robot configuration.
      operationId: robotConfigurationPUT
      parameters:
      - description: The _username_ associated to the account
        explode: true
        in: query
        name: username
        required: false
        schema:
          example: thirdPartApp
          type: string
        style: form
      - description: The _domain_ associated to the account
        explode: true
        in: query
        name: domain
        required: false
        schema:
          example: demo
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotConfiguration'
        description: RobotConfiguration.
        required: true
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Edit the Robot configuration
      tags:
      - Robot
      - bit4id-pathgroup:Robots
      x-openapi-router-controller: RobotController
      x-openapi-router-service: RobotService
  /oauth/token:
    post:
      description: This API allows to get the token needed to access other APIs through
        the OAuth2 authentication.
      operationId: oauthTokenPOST
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                username:
                  description: The username in the form _username_@_domain_ where
                    *domain* is the organization the user belongs to
                  example: username@bit4id
                  type: string
                password:
                  description: This is the actual password of the user
                  example: a12345678z
                  type: string
                grant_type:
                  description: A parameter that indicates the type of the grant in
                    order to perform the basic authentication
                  enum:
                  - password
                  example: password
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: OAuth Access Token
      security:
      - Basic: []
      summary: Get the bearer token
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /DSTs:
    get:
      description: This API allows to list the DSTs of an organization.
      operationId: dSTsGET
      parameters:
      - description: Select templates or instances
        explode: true
        in: query
        name: template
        required: false
        schema:
          default: false
          example: false
          type: boolean
        style: form
      - description: Select the objects relative to the user specified by the parameter.
          If not specified will be used the id of the current authenticated user
        explode: true
        in: query
        name: userId
        required: false
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: form
      - description: |
          A number of results to return. Applied after **$skip**
        explode: true
        in: query
        name: $top
        required: false
        schema:
          example: 32
          format: int32
          type: integer
        style: form
      - description: An offset into the collection of results
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          example: 64
          format: int64
          type: integer
        style: form
      - description: |
          If true, the server includes the count of all the items in the response
        explode: true
        in: query
        name: $count
        required: false
        schema:
          example: true
          type: boolean
        style: form
      - description: An ordering definition (eg. $orderBy=updatedAt,desc)
        explode: true
        in: query
        name: $orderBy
        required: false
        schema:
          example: $orderBy=updatedAt
          type: string
        style: form
      - description: A filter definition (eg. $filter=name == "Milk" or surname ==
          "Bread")
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          example: $filter=name=="Milk"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSTsGetResponse'
          description: The data matching the selection parameters.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve DSTs
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
    post:
      description: |
        This API allows to creates a new DST. A DST is created in the Draft
        state and then updated using PUT. Example of creation request:

        ```
        {
          status: "draft",
          publishedAt: null,
          tags: [],
          urgent: false,
          template: false
        }
        ```

        To add documents use the Resources Patch endpoint `/DST/{id}/resources`.

        If the *template* flag is set true the DST is a Template. If the *publicTemplate* flag is set true the Template is visible to all users with rights to create a DST.

        A DST is made made available to users using *publish* end point. A template generates a DST with the *instantiate* endpoint.
      operationId: dSTsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalSignatureTransaction'
        description: DST to append to the current resources.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The new DST added to the list.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Create a new DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/instantiate:
    post:
      description: This API allows to instantiate a DST from a template by specifying
        the template Id.
      operationId: dSTIdInstantiatePOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The new DST that has been generated as an instance of the template.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Instantiate a DST from a template
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/modify:
    post:
      description: |
        This API allows to move a published DST to DRAFT, allowing the modification. This way is possible to modify a _DST Template_.
      operationId: dSTIdModifyPOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The modified DST in DRAFT state.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Modify a published DST template
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/templatize:
    post:
      description: This API allows to creates a new template starting from a DST.
        Currently implemented only for published DST templates.
      operationId: dSTIdTemplatizePOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The new DST that has been generated as a template of the referred
            DST.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Create a template from a DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/note:
    get:
      description: This API allows to retrieve the DST Notes associated to the DST.
      operationId: dSTIdNoteGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DSTNote'
                type: array
          description: The DSTNotes
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve the DSTNotes associated to the DST
      tags:
      - DSTNote
      - bit4id-pathgroup:DSTNote
      x-openapi-router-controller: DSTNoteController
      x-openapi-router-service: DSTNoteService
    post:
      description: This API allows to append a new DSTNote to the DST.
      operationId: dSTIdNotePOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                text:
                  description: This is the actual content of the _DSTNote_
                  example: This is the new privacy policy.
                  type: string
              type: object
        description: The DSTNote to append
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSTNote'
          description: The DSTNote just added
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Append a new DSTNote
      tags:
      - DSTNote
      - bit4id-pathgroup:DSTNote
      x-openapi-router-controller: DSTNoteController
      x-openapi-router-service: DSTNoteService
  /DST/{id}/note/{noteId}:
    delete:
      description: This API allows to delete a DSTNote.
      operationId: dSTIdNoteNoteIdDELETE
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: The reference of a DSTNote
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          example: 14
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Delete a DSTNote
      tags:
      - DSTNote
      - bit4id-pathgroup:DSTNote
      x-openapi-router-controller: DSTNoteController
      x-openapi-router-service: DSTNoteService
    put:
      description: This API allows to edit a DSTNote.
      operationId: dSTIdNoteNoteIdPUT
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: The reference of a DSTNote
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          example: 14
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DSTNote'
        description: DSTNote replacing current object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSTNote'
          description: The updated DSTNote.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Edit a DSTNote
      tags:
      - DSTNote
      - bit4id-pathgroup:DSTNote
      x-openapi-router-controller: DSTNoteController
      x-openapi-router-service: DSTNoteService
  /DST/{id}/audit:
    get:
      description: This API allows to retrieves the audit records associated to the
        DST.
      operationId: dSTIdAuditGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuditRecord'
                type: array
          description: The audit associated to the DST sorted by date.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve the audit records associated to the DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/replace:
    post:
      description: This API allows to replace a rejected DST instantiating a new one.
        The replacing DST is created in DRAFT state.
      operationId: dSTIdReplacePOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The new DST that has been generated as a replace of the referred
            DST.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Replace a rejected DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/sign/{docId}/{signId}:
    get:
      description: This API returns the address to perform the signature.
      operationId: dSTIdSignDocIdSignIdGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: Reference to _docId_ has to be signed
        explode: false
        in: path
        name: docId
        required: true
        schema:
          example: 3
          format: int32
          type: integer
        style: simple
      - description: Reference to the signature request id
        explode: false
        in: path
        name: signId
        required: true
        schema:
          example: 2
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSTSigningAddressResponse'
          description: The URL where to sign.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Return the address for signing
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}:
    delete:
      description: This API allows to delete a DST. Actually the DST is marked as
        deleted thus not displayed anymore into the organization, but it will still
        be present in the database.
      operationId: dSTIdDELETE
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Delete a DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
    get:
      description: This API allows to retrieve a DST.
      operationId: dSTIdGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The data matching the selection parameters.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve a DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
    put:
      description: This API allows to update a DST.
      operationId: dSTIdPUT
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalSignatureTransaction'
        description: DST replacing current object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The updated DST.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Update a DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /users:
    get:
      description: This allows to get the list of the Users of an Organization.
      operationId: usersGET
      parameters:
      - description: |
          A number of results to return. Applied after **$skip**
        explode: true
        in: query
        name: $top
        required: false
        schema:
          example: 32
          format: int32
          type: integer
        style: form
      - description: An offset into the collection of results
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          example: 64
          format: int64
          type: integer
        style: form
      - description: |
          If true, the server includes the count of all the items in the response
        explode: true
        in: query
        name: $count
        required: false
        schema:
          example: true
          type: boolean
        style: form
      - description: An ordering definition (eg. $orderBy=updatedAt,desc)
        explode: true
        in: query
        name: $orderBy
        required: false
        schema:
          example: $orderBy=updatedAt
          type: string
        style: form
      - description: A filter definition (eg. $filter=name == "Milk" or surname ==
          "Bread")
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          example: $filter=name=="Milk"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetResponse'
          description: The data matching the selection parameters.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve Users
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
    post:
      description: This API allows to create a new User.
      operationId: usersPOST
      requestBody:
        $ref: '#/components/requestBodies/CreateUserRequest'
        content:
          application/json:
            schema:
              example:
                password: A12345678z
                user:
                  role: signer
                  capabilities:
                  - user.create.all
                  - user.create.all
                  extraData:
                    st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
                  groups:
                  - domain: bit4id
                    name: Marketing BU
                    id: 1
                  - domain: bit4id
                    name: Marketing BU
                    id: 1
                  automatic: false
                  language: en
                  createdAt: 2007-04-02T19:30:10Z
                  deletedAt: 2007-04-02T19:30:10Z
                  phone: +013392213450
                  createdBy: 9a608f1a-e42a-4d05-8e2b-1df8ec63cd5d
                  surname: Doe
                  domain: bit4id
                  name: John
                  id: e6419924-fd1d-4c42-9fa2-88023461f5df
                  email: john.doe@email.com
                  username: jdo
              properties:
                user:
                  $ref: '#/components/schemas/User'
                password:
                  description: |
                    This represents the password the user will use to login from the web interface. If the field is omitted the email address provided during the creation of the user will receive an email with a link from where will be possible to set a password
                  example: A12345678z
                  type: string
              required:
              - user
              title: CreateUserRequest
              type: object
        description: User to create
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                description: id of the new resource.
                example: 7e49d963-544e-407e-ba57-049785ef3760
                format: uuid
                title: SuccessCreatedResponse
                type: string
          description: The request has been satisfyied, new resource created.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Create a new User
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /users/groups:
    get:
      description: This API allows to get the list of the UserGroups.
      operationId: usersGroupsGET
      parameters:
      - description: |
          A number of results to return. Applied after **$skip**
        explode: true
        in: query
        name: $top
        required: false
        schema:
          example: 32
          format: int32
          type: integer
        style: form
      - description: An offset into the collection of results
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          example: 64
          format: int64
          type: integer
        style: form
      - description: |
          If true, the server includes the count of all the items in the response
        explode: true
        in: query
        name: $count
        required: false
        schema:
          example: true
          type: boolean
        style: form
      - description: An ordering definition (eg. $orderBy=updatedAt,desc)
        explode: true
        in: query
        name: $orderBy
        required: false
        schema:
          example: $orderBy=updatedAt
          type: string
        style: form
      - description: A filter definition (eg. $filter=name == "Milk" or surname ==
          "Bread")
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          example: $filter=name=="Milk"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupGetResponse'
          description: The data matching the selection parameters.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve UserGroups
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
    post:
      description: This API allows to create a new UserGroups.
      operationId: usersGroupsPOST
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UserGroup'
              type: array
        description: UserGroup list to be added.
        required: true
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Create a new UserGroups
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /user/{id}:
    delete:
      description: |
        This API allows to **enable** or **disable** a User account.
      operationId: userIdDELETE
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: |
          This is a _boolean_ parameter. If true the User is **enabled**
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          default: false
          example: true
          type: boolean
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Enable or disable a User
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
    get:
      description: This API allows to retrieve a User.
      operationId: userIdGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The data matching the selection parameters.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve a User
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
    put:
      description: This API allows to update a User.
      operationId: userIdPUT
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User replacing current object.
        required: true
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Update a User
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /user/{id}/identity/{identity-id}/appearance:
    delete:
      description: This API allows to delete an identity appearance resource.
      operationId: userIdIdentityIdentityIdAppearanceDELETE
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: The unique id of the _Identity_
        explode: false
        in: path
        name: identity-id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Delete a user appearance resource.
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
    get:
      description: This API allows to get the identity appearance resource.
      operationId: userIdIdentityIdentityIdAppearanceGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: The unique id of the _Identity_
        explode: false
        in: path
        name: identity-id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The response is the binary resource file content.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Download an identity appearance resource
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
    post:
      description: This API allows to add a graphical appearance to the identity of
        a user.
      operationId: userIdIdentityIdentityIdAppearancePOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: The unique id of the _Identity_
        explode: false
        in: path
        name: identity-id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The path of the file to upload
                  format: binary
                  type: string
                filename:
                  description: The name of the file
                  example: contract.pdf
                  type: string
                resourceType:
                  description: The type of the resource
                  enum:
                  - PDF_Document
                  - Image
                  example: PDF_Document
                  type: string
                title:
                  description: User-defined title of the resource
                  example: Sales Contract
                  type: string
              required:
              - file
              - filename
              - resourceType
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LFResource'
          description: The new created Resource
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Add a graphical appearance to a user's identity
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
  /user/{id}/role:
    put:
      description: |
        This API allows to change the permissions associated to the users, (**capabilities**) according to predefined user roles.
      operationId: userIdRolePUT
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: |
          The new **role** of the User. Allowed values are **admin**, **instructor**, **signer**
        explode: true
        in: query
        name: newRole
        required: true
        schema:
          enum:
          - admin
          - instructor
          - signer
          example: instructor
          type: string
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Change the User role
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /user/{id}/identities:
    get:
      description: This API allows to retrieve user identities.
      operationId: userIdIdentitiesGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Identity'
                type: array
          description: The identities associated to the user.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve User identities
      tags:
      - Users
      - bit4id-pathgroup:Users
      x-openapi-router-controller: UsersController
      x-openapi-router-service: UsersService
  /resource/{id}:
    get:
      description: This API allows to retrieve a Resource.
      operationId: resourceIdGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The response is the binary resource file content.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve a Resource
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
    put:
      description: This API allows to update a Resource.
      operationId: resourceIdPUT
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LFResource'
        description: Resource replacing current object.
        required: true
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Update a Resource
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
  /DST/resource/{id}:
    delete:
      description: This API allows to delete a Resource.
      operationId: dSTResourceIdDELETE
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The DST Updated.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Delete a Resource
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
  /DST/{id}/resources:
    get:
      description: This API allows to retrieve all resources associated to a DST.
      operationId: dSTIdResourcesGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The response body contains all resources associated to a DST
            into a zip file.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve all resources associated to a DST
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
    patch:
      description: This API allows to append a new Resource to a DST.
      operationId: dSTIdResourcesPATCH
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The file to upload
                  format: binary
                  type: string
                filename:
                  description: The name of the file
                  example: contract.pdf
                  type: string
                resourceType:
                  enum:
                  - PDF_Document
                  example: PDF_Document
                  type: string
                title:
                  description: User-defined title of the resource.
                  example: Sales Contract
                  type: string
              required:
              - file
              - filename
              - resourceType
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The DST patched with the new resource.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Append a new resource to a DST
      tags:
      - Resources
      - bit4id-pathgroup:Resources
      x-openapi-router-controller: ResourcesController
      x-openapi-router-service: ResourcesService
  /robot/DSTs:
    post:
      description: |
        This API allows to create a new DST with a more convenient interface for client applications. The purpose is to provide a method for the creation of a DST in order to semplify the integration into third part applications.
      operationId: robotDSTsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDigitalSignatureTransaction'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The new DST.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Create a new DST in one call
      tags:
      - Robots
      - bit4id-pathgroup:Robots
      x-openapi-router-controller: RobotsController
      x-openapi-router-service: RobotsService
  /robot/{id}/instantiate:
    post:
      description: |
        This API allows to instantiate a DST from a template patching parts of its data structure.
      operationId: robotIdInstantiatePOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/InstantiateDSTTemplate'
        content:
          application/json:
            schema:
              example:
                templatePatches:
                  template: false
                  publicTemplate: false
                  ccGroups:
                  - Marketing
                  - Marketing
                  ccUsers:
                  - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                  - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                  documents:
                  - signerGroups:
                    - signers:
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      _instance_id: 1
                    - signers:
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      _instance_id: 1
                    signatureRequests:
                    - signProfile: PAdES
                      reason: As the Buyer
                      signerId: 2
                      _instance_id: 1
                      declinable: false
                      extraData:
                        st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
                      withTimestamp: true
                      description: The proponent
                      restrictions:
                      - rule: rule
                        value: value
                        operator: operator
                      - rule: rule
                        value: value
                        operator: operator
                      id: 3
                    - signProfile: PAdES
                      reason: As the Buyer
                      signerId: 2
                      _instance_id: 1
                      declinable: false
                      extraData:
                        st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
                      withTimestamp: true
                      description: The proponent
                      restrictions:
                      - rule: rule
                        value: value
                        operator: operator
                      - rule: rule
                        value: value
                        operator: operator
                      id: 3
                    resource:
                      filename: contract.pdf
                      source:
                        sourceURL: http://example.com/aeiou
                        embeddedData: ""
                        type: Embedded
                      title: Sales Contract
                      resourceType:
                      - PDF_Document
                      - PDF_Document
                    forms:
                    - _instance_id: 1
                      extraData:
                        signatureRequestId: 1
                      invisible: true
                      filled: false
                      type: SignatureForm
                      positionX: 100.00
                      positionY: 58.14
                      toFill: true
                      signerId: 1
                      width: 10.1
                      documentId: 3
                      id: 2
                      page: 1
                      height: 5.66
                    - _instance_id: 1
                      extraData:
                        signatureRequestId: 1
                      invisible: true
                      filled: false
                      type: SignatureForm
                      positionX: 100.00
                      positionY: 58.14
                      toFill: true
                      signerId: 1
                      width: 10.1
                      documentId: 3
                      id: 2
                      page: 1
                      height: 5.66
                  - signerGroups:
                    - signers:
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      _instance_id: 1
                    - signers:
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      - role: buyer
                        _instance_id: 1
                        phone: +013392213450
                        surname: Smith
                        name: Adam
                        templateLabel: Buyer
                        id: 1
                        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                        email: adam.smith@email.com
                      _instance_id: 1
                    signatureRequests:
                    - signProfile: PAdES
                      reason: As the Buyer
                      signerId: 2
                      _instance_id: 1
                      declinable: false
                      extraData:
                        st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
                      withTimestamp: true
                      description: The proponent
                      restrictions:
                      - rule: rule
                        value: value
                        operator: operator
                      - rule: rule
                        value: value
                        operator: operator
                      id: 3
                    - signProfile: PAdES
                      reason: As the Buyer
                      signerId: 2
                      _instance_id: 1
                      declinable: false
                      extraData:
                        st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
                      withTimestamp: true
                      description: The proponent
                      restrictions:
                      - rule: rule
                        value: value
                        operator: operator
                      - rule: rule
                        value: value
                        operator: operator
                      id: 3
                    resource:
                      filename: contract.pdf
                      source:
                        sourceURL: http://example.com/aeiou
                        embeddedData: ""
                        type: Embedded
                      title: Sales Contract
                      resourceType:
                      - PDF_Document
                      - PDF_Document
                    forms:
                    - _instance_id: 1
                      extraData:
                        signatureRequestId: 1
                      invisible: true
                      filled: false
                      type: SignatureForm
                      positionX: 100.00
                      positionY: 58.14
                      toFill: true
                      signerId: 1
                      width: 10.1
                      documentId: 3
                      id: 2
                      page: 1
                      height: 5.66
                    - _instance_id: 1
                      extraData:
                        signatureRequestId: 1
                      invisible: true
                      filled: false
                      type: SignatureForm
                      positionX: 100.00
                      positionY: 58.14
                      toFill: true
                      signerId: 1
                      width: 10.1
                      documentId: 3
                      id: 2
                      page: 1
                      height: 5.66
                  title: Real estate sales contract transaction
                  urgent: false
                  expiresAt: 2007-04-25T12:00:00Z
                  status: toSign
                  tags:
                  - important
                  - important
                rolesMapping:
                  buyer:
                    email: adam.smith@example.co.uk
              properties:
                templatePatches:
                  $ref: '#/components/schemas/CreateDigitalSignatureTransaction'
                rolesMapping:
                  description: Indicates the mapping between the role specified into
                    the template and the actual signer have to sign the _Digital Signature
                    Transaction_
                  example:
                    buyer:
                      email: adam.smith@example.co.uk
                  items:
                    $ref: '#/components/schemas/_robot__id__instantiate_rolesMapping'
                  type: array
              title: InstantiateDSTTemplate
              type: object
        description: description of the body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The new DST that has been generated as an instance of the template.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Instantiate a DST from a template by robot
      tags:
      - Robots
      - bit4id-pathgroup:Robots
      x-openapi-router-controller: RobotsController
      x-openapi-router-service: RobotsService
  /DST/{id}/fill:
    patch:
      description: This API allows to fill a form of a DST.
      operationId: dSTIdFillPATCH
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FillableForm'
        description: The form filled by the user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The DST has been modified according to the operation.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Fill a form of a DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/publish:
    post:
      description: This API allows to publish a DST, the new state becomes published.
        It will automatically evolve to a new state where it will be filled or signed.
      operationId: dSTIdPublishPOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSignatureTransaction'
          description: The DST has been modified according to the operation.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Publish a DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /DST/{id}/notify:
    post:
      description: This API allows to send notifications to pending users for an active
        _DST_.
      operationId: dSTIdNotifyPOST
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Send notifications for a DST
      tags:
      - Digital Signature Transactions
      - bit4id-pathgroup:Digital Signature Transactions
      x-openapi-router-controller: DigitalSignatureTransactionsController
      x-openapi-router-service: DigitalSignatureTransactionsService
  /auth/logout:
    get:
      description: This API allows to Log out current user.
      operationId: logoutUser
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Log out current user terminating the session
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /auth/user:
    get:
      description: This API allows to retrieve the current logged in user.
      operationId: authUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Return current logged in user
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Return the current logged in user
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /auth/passwordLost:
    get:
      description: This API requests to recover the own password.
      operationId: authPasswordLostGET
      parameters:
      - description: Username associated to the account
        explode: true
        in: query
        name: username
        required: true
        schema:
          example: jdo
          type: string
        style: form
      - description: Domain associated to the account
        explode: true
        in: query
        name: domain
        required: true
        schema:
          example: demo
          type: string
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      summary: Request to recover own password
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /auth/passwordReset:
    get:
      description: This API allows to reset the password of a user. This is possible
        when the request is performed with a superuser.
      operationId: authPasswordResetGET
      parameters:
      - description: Username associated to the account
        explode: true
        in: query
        name: username
        required: true
        schema:
          example: jdo
          type: string
        style: form
      - description: Domain associated to the account
        explode: true
        in: query
        name: domain
        required: true
        schema:
          example: demo
          type: string
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Reset a user password with superuser
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
    post:
      description: This API allows to reset your own password knowing the previous
        one with a logged user.
      operationId: authPasswordResetPOST
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              properties:
                currentPassword:
                  description: The current password of the user
                  example: a12345678Z
                  type: string
                newPassword:
                  description: The new password choosen
                  example: 0abcdefgH9
                  type: string
              type: object
        required: true
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Reset your own password
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /auth/changePassword:
    post:
      description: This API allows to change the password by consuming a token.
      operationId: authChangePasswordPOST
      parameters:
      - description: The password token issued to change password
        explode: true
        in: query
        name: passwordToken
        required: true
        schema:
          example: 05ea656f-df69-49b1-a12b-9bf640c427c2
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/Newpassword'
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      summary: Consume a token to change the password
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /service/changePassword:
    post:
      description: |
        This API allows to change the password of a **service user**.
      operationId: serviceChangePasswordPOST
      parameters:
      - description: Username associated to the account
        explode: true
        in: query
        name: username
        required: true
        schema:
          example: jdo
          type: string
        style: form
      - description: Domain associated to the account
        explode: true
        in: query
        name: domain
        required: true
        schema:
          example: demo
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/Newpassword'
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Change the password of a service user
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /auth/saml:
    post:
      description: This API allows to register or Update a SAML user.
      operationId: authSamlPOST
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                domain:
                  description: SAML domain
                  example: bit4id
                  type: string
                IDToken1:
                  description: The BASE64-encoded SAML Reply in JSON
                  example: PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIElEPSJSZDkwYTY5NDg1YTdiMmMxYjM0NWFjOGQ1Y2UyZmExMzFkZmRkMzRlOSIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMTYtMDMtMTdUMjI6NTA6MzBaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly97c3ViZG9tYWlufS5mYWNlYm9vay5jb20vd29yay9zYW1sLnBocCI+P...
                  type: string
                IDToken2:
                  description: The Hex-encoded HMAC-SHA256 of the decoded IDToken1
                  example: f7bc83f430538424b13298e6aa6fb143ef4d59a14946175997479dbc2d1a3cd8
                  type: string
              required:
              - IDToken1
              - IDToken2
              - domain
              type: object
      responses:
        "303":
          description: Redirect to frontend page with new auth token (Post/Redirect/Get
            design pattern).
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      summary: Register or Update a SAML user
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /service/users/sync:
    post:
      description: This API allows to sync user accounts.
      operationId: serviceUsersSyncPOST
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/InlineObject'
              type: array
        description: User Accounts
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSyncReport'
          description: Report of last sync.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Sync user accounts
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /auth/passwordToken:
    get:
      description: This API allows to get a password token to use in order to change
        a password.
      operationId: authPasswordTokenGET
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: a9851478-7fe3-4d67-bcbc-1ba30581fab3
                type: array
          description: A password token associated to the logged user.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Get token to change password
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /notifications/dsts:
    get:
      description: This APIs allows to get latest user Notifications for DSTs sorted
        desc by time.
      operationId: notificationsDstsGET
      parameters:
      - description: |
          A number of results to return. Applied after **$skip**
        explode: true
        in: query
        name: $top
        required: false
        schema:
          example: 32
          format: int32
          type: integer
        style: form
      - description: An offset into the collection of results
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          example: 64
          format: int64
          type: integer
        style: form
      - description: |
          If true, the server includes the count of all the items in the response
        explode: true
        in: query
        name: $count
        required: false
        schema:
          example: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
          description: Last DST notifications.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Get latest DST Notifications
      tags:
      - Notifications
      - bit4id-pathgroup:Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notifications/dst/{id}:
    delete:
      description: This API notifies that a user consumed all active notifications
        for a DST.
      operationId: notificationsDstIdDELETE
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Clear Notifications for a DST
      tags:
      - Notifications
      - bit4id-pathgroup:Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /notifications/push-token:
    delete:
      description: This API deregister a deviceId from the push notifications.
      operationId: notificationsPushTokenDELETE
      parameters:
      - description: The _deviceId_ to deregister
        explode: true
        in: query
        name: deviceId
        required: true
        schema:
          example: 05ea656f-df69-49b1-a12b-9bf640c427c2
          type: string
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Clear a registered push notification token
      tags:
      - Notifications
      - bit4id-pathgroup:Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
    post:
      description: |
        This API allows to register a token for push notifications.
        Only trusted deviceId can be registered.
      operationId: notificationsPushTokenPOST
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/json:
            schema:
              properties:
                deviceId:
                  description: Unique reference to the device
                  example: 1ca229c8-2a99-4f3e-9421-36377fd8d9e5
                  type: string
                token:
                  description: The token to register
                  example: c84c1180-3bdf-44e0-afee-1e255c7ab88f
                  type: string
              type: object
        description: Resource replacing current object.
        required: true
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Register a token for push notifications
      tags:
      - Notifications
      - bit4id-pathgroup:Notifications
      x-openapi-router-controller: NotificationsController
      x-openapi-router-service: NotificationsService
  /pdfResource/{id}/thumbs:
    get:
      description: This API allows to extract thumbnails from a PDF Resource.
      operationId: pdfResourceIdThumbsGET
      parameters:
      - description: The value of _the unique id_
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: simple
      - description: The page to retrieve
        explode: true
        in: query
        name: page
        required: true
        schema:
          example: 1
          format: int32
          type: integer
        style: form
      - description: The output image width
        explode: true
        in: query
        name: width
        required: false
        schema:
          example: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
          description: The output is a raw string. The thumbnails of the page requested
            for the PDF resource.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve a Resource (of service)
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /devices:
    get:
      description: |
        The API allows to enumerate all the devices of a user.
      operationId: devicesGET
      parameters:
      - description: Select the objects relative to the user specified by the parameter.
          If not specified will be used the id of the current authenticated user
        explode: true
        in: query
        name: userId
        required: false
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: form
      - description: |
          A number of results to return. Applied after **$skip**
        explode: true
        in: query
        name: $top
        required: false
        schema:
          example: 32
          format: int32
          type: integer
        style: form
      - description: An offset into the collection of results
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          example: 64
          format: int64
          type: integer
        style: form
      - description: |
          If true, the server includes the count of all the items in the response
        explode: true
        in: query
        name: $count
        required: false
        schema:
          example: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedDevicesGetResponse'
          description: The list of trusted devices.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
      security:
      - OAuth2:
        - signer
      summary: Get the list of trusted devices
      tags:
      - Devices
      - bit4id-pathgroup:Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /device/authorization:
    delete:
      description: |
        This APIs allows to deregister a _deviceId_ of a trusted device.

        It also deletes any notification push-token associated to the trusted device.
      operationId: deviceAuthorizationDELETE
      parameters:
      - description: The _deviceId_ to deregister
        explode: true
        in: query
        name: deviceId
        required: true
        schema:
          example: 05ea656f-df69-49b1-a12b-9bf640c427c2
          type: string
        style: form
      - description: Select the objects relative to the user specified by the parameter.
          If not specified will be used the id of the current authenticated user
        explode: true
        in: query
        name: userId
        required: false
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Clear a trusted device
      tags:
      - Devices
      - bit4id-pathgroup:Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    get:
      description: |
        This API allows to retrieve a challenge in order to authorize a new trusted device.
          - If asked in image/png the challenge is given encoded as a QR-Code image.
          - An invocation of the endpoint invalidate any previous challenge.
          - The challenge lasts 10 minutes.
      operationId: deviceAuthorizationGET
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthorizationResponse'
            image/png:
              schema:
                $ref: '#/components/schemas/DeviceAuthorizationResponse'
          description: The challenge to be used for the authorization.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve a challenge for authorizing a new trusted device
      tags:
      - Devices
      - bit4id-pathgroup:Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
    post:
      description: |
        This API allows to register a new trusted device. If the device is
        already present, it returns the current associated Token and updates the name.
      operationId: deviceAuthorizationPOST
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/json:
            schema:
              properties:
                challenge:
                  description: The challenge to be used to register the device
                  example: 2a12618a-4128-11ea-b77f-2e728ce88125
                  format: uuid
                  type: string
                deviceId:
                  description: The id of the device
                  example: 123e4567-e89b-12d3-a456-556642440000
                  type: string
                name:
                  description: An arbitrary name to be assigned to the device
                  example: John Doe"s iPhone
                  type: string
              type: object
        description: The request for adding a new trusted device.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 123e4567-e89b-12d3-a456-556642440000
                  format: uuid
                  type: string
                type: array
          description: The token to be used for next calls of the endpoint /device/authorize.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      summary: Register a new trusted device
      tags:
      - Devices
      - bit4id-pathgroup:Devices
      x-openapi-router-controller: DevicesController
      x-openapi-router-service: DevicesService
  /sign-service/open:
    post:
      description: description bla bla
      operationId: SignServiceOpen
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      security:
      - OAuth2:
        - signer
      summary: sign-service open post
      tags:
      - SigningServices
      x-openapi-router-controller: SigningServicesController
      x-openapi-router-service: SigningServicesService
  /sign-service/open/{transaction-id}:
    post:
      operationId: SignServiceOpenId
      parameters:
      - explode: false
        in: path
        name: transaction-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
      security:
      - OAuth2:
        - signer
      summary: sign-service-open-transaction-id post
      tags:
      - SigningServices
      x-openapi-router-controller: SigningServicesController
      x-openapi-router-service: SigningServicesService
  /service/configuration:
    get:
      description: |
        This API allows to get the public configuration associated to
        the application.
      operationId: configurationGet
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  example:
                    protocol: http
                    baseHost: signing-service.today
                  type: object
                type: object
          description: OK
      summary: Retrieve the App configuration
      tags:
      - Services
      - bit4id-pathgroup:Services
      x-openapi-router-controller: ServicesController
      x-openapi-router-service: ServicesService
  /sign-service/{signature-id}/perform/{identity-id}:
    post:
      operationId: signatureIdPerformIdPost
      parameters:
      - explode: false
        in: path
        name: signature-id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: identity-id
        required: true
        schema:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/json:
            schema:
              properties:
                example1:
                  example: example1
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      security:
      - OAuth2:
        - signer
      summary: sign-service-signature-id-perform-identity-id post
      tags:
      - SigningServices
      x-openapi-router-controller: SigningServicesController
      x-openapi-router-service: SigningServicesService
  /organizations:
    get:
      description: Get the list of organizations
      operationId: organizationsGet
      parameters:
      - description: |
          A number of results to return. Applied after **$skip**
        explode: true
        in: query
        name: $top
        required: false
        schema:
          example: 32
          format: int32
          type: integer
        style: form
      - description: An offset into the collection of results
        explode: true
        in: query
        name: $skip
        required: false
        schema:
          example: 64
          format: int64
          type: integer
        style: form
      - description: |
          If true, the server includes the count of all the items in the response
        explode: true
        in: query
        name: $count
        required: false
        schema:
          example: true
          type: boolean
        style: form
      - description: A filter definition (eg. $filter=name == "Milk" or surname ==
          "Bread")
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          example: $filter=name=="Milk"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsGetResponse'
          description: The list of organizations.
      security:
      - OAuth2:
        - signer
      summary: Get the list of organizations
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
    post:
      operationId: organizationsPost
      requestBody:
        $ref: '#/components/requestBodies/Organization'
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Create a new organization
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
  /organization/{id}:
    delete:
      description: Enable or disable an Organization.
      operationId: organizationIdDELETE
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      - description: New status to set
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Enable or disable an Organization account.
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
    get:
      operationId: organizationIdGet
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve info on one organization
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
    put:
      operationId: organizationIdPut
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Organization'
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Result of a client passing incorrect or invalid data.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Update info on one organization
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
  /organization/public:
    get:
      operationId: organizationIdPublicGet
      parameters:
      - description: resource id
        explode: true
        in: query
        name: res
        required: true
        schema:
          enum:
          - logo
          example: logo
          type: string
        style: form
      - description: organization id
        explode: true
        in: query
        name: id
        required: false
        schema:
          example: 05ea656f-df69-49b1-a12b-9bf640c427c2
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Resource content.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      summary: Retrieve public resources
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
  /organization/tags:
    get:
      operationId: organizationTagsGet
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: URGENTE
                  type: string
                type: array
          description: Resource content.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Retrieve organization tags
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
  /organization/{id}/alfrescoSync:
    get:
      operationId: organizationIdAlfrescoSyncGet
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlfrescoSync'
          description: OK
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Sync all completed DSTs on Alfresco
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
    post:
      operationId: organizationIdAlfrescoSyncPost
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlfrescoSync'
        description: Domain associated to the account.
        required: true
      responses:
        "202":
          description: OK
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Sync all completed DSTs on Alfresco
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
  /organization/{id}/resources:
    get:
      description: List all the organization resources.
      operationId: organizationResourcesGet
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: List all the organization resources
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
  /organization/{id}/resource:
    delete:
      description: Deletes a Resource.
      operationId: organizationResourceIdDelete
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      - explode: true
        in: query
        name: resPath
        required: true
        schema:
          example: 05ea656f-df69-49b1-a12b-9bf640c427c2
          type: string
        style: form
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Delete an organization resource
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
    get:
      description: Get an organization resource
      operationId: organizationIdResourceGET
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      - explode: true
        in: query
        name: resPath
        required: true
        schema:
          example: 05ea656f-df69-49b1-a12b-9bf640c427c2
          type: string
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: An organization resource.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "404":
          description: The resource was not found.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Get an organization resource
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
    put:
      description: Create or overwrite an organization resource
      operationId: organizationIdResourcePUT
      parameters:
      - description: The value of the unique id
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: test_id
          type: string
        style: simple
      - explode: true
        in: query
        name: resPath
        required: true
        schema:
          example: 05ea656f-df69-49b1-a12b-9bf640c427c2
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The file to upload.
                  format: binary
                  type: string
              required:
              - file
              type: object
      responses:
        "204":
          description: The request has been satisfyied. No output.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User authentication was not effective (e.g. not provided, invalid
            or expired).
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: User is not allowed to perform the request.
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cannot satisfy the request because the resource is in an illegal
            status.
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceFailureResponse'
          description: Internal failure of the service.
      security:
      - OAuth2:
        - signer
      summary: Create or overwrite an organization resource
      tags:
      - Backoffice
      x-openapi-router-controller: BackofficeController
      x-openapi-router-service: BackofficeService
components:
  parameters:
    organization:
      description: Unique organization name
      explode: false
      in: header
      name: org
      required: true
      schema:
        example: demo-org
        type: string
      style: simple
    idParam:
      description: The value of _the unique id_
      explode: false
      in: path
      name: id
      required: true
      schema:
        example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        format: uuid
        type: string
      style: simple
    idStringParam:
      description: The value of the unique id
      explode: false
      in: path
      name: id
      required: true
      schema:
        example: test_id
        type: string
      style: simple
    topParam:
      description: |
        A number of results to return. Applied after **$skip**
      explode: true
      in: query
      name: $top
      required: false
      schema:
        example: 32
        format: int32
        type: integer
      style: form
    skipParam:
      description: An offset into the collection of results
      explode: true
      in: query
      name: $skip
      required: false
      schema:
        example: 64
        format: int64
        type: integer
      style: form
    userIdParam:
      description: Select the objects relative to the user specified by the parameter.
        If not specified will be used the id of the current authenticated user
      explode: true
      in: query
      name: userId
      required: false
      schema:
        example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        format: uuid
        type: string
      style: form
    countParam:
      description: |
        If true, the server includes the count of all the items in the response
      explode: true
      in: query
      name: $count
      required: false
      schema:
        example: true
        type: boolean
      style: form
    orderParam:
      description: An ordering definition (eg. $orderBy=updatedAt,desc)
      explode: true
      in: query
      name: $orderBy
      required: false
      schema:
        example: $orderBy=updatedAt
        type: string
      style: form
    filterParam:
      description: A filter definition (eg. $filter=name == "Milk" or surname == "Bread")
      explode: true
      in: query
      name: $filter
      required: false
      schema:
        example: $filter=name=="Milk"
        type: string
      style: form
    noteIdParam:
      description: The reference of a DSTNote
      explode: false
      in: path
      name: noteId
      required: true
      schema:
        example: 14
        format: int64
        type: integer
      style: simple
    domainParam:
      description: Domain associated to the account
      explode: true
      in: query
      name: domain
      required: true
      schema:
        example: demo
        type: string
      style: form
    usernameParam:
      description: Username associated to the account
      explode: true
      in: query
      name: username
      required: true
      schema:
        example: jdo
        type: string
      style: form
    domainParam_opt:
      description: The _domain_ associated to the account
      explode: true
      in: query
      name: domain
      required: false
      schema:
        example: demo
        type: string
      style: form
    usernameParam_opt:
      description: The _username_ associated to the account
      explode: true
      in: query
      name: username
      required: false
      schema:
        example: thirdPartApp
        type: string
      style: form
  requestBodies:
    Organization:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organization'
    Newpassword:
      content:
        text/plain:
          schema:
            example: A12345678z
            type: string
      description: New password associated to the account (BCrypt)
      required: true
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    CreateUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserRequest'
      required: true
    inline_object_2:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_2'
    inline_object_3:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    InstantiateDSTTemplate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstantiateDSTTemplate'
      required: true
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
      required: true
    inline_object_5:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_5'
    inline_object_6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_6'
      required: true
    inline_object_7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_7'
      required: true
    inline_object_8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_8'
    inline_object_9:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_9'
  responses:
    Success_Created_201:
      content:
        '*/*':
          schema:
            description: id of the new resource.
            example: 7e49d963-544e-407e-ba57-049785ef3760
            format: uuid
            title: SuccessCreatedResponse
            type: string
      description: The request has been satisfyied, new resource created.
    Success_NoData_204:
      description: The request has been satisfyied. No output.
    InvalidClientRequest_400:
      content:
        '*/*':
          schema:
            items:
              $ref: '#/components/schemas/ErrorResponse'
            type: array
      description: Result of a client passing incorrect or invalid data.
    IllegalStatus_409:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Cannot satisfy the request because the resource is in an illegal
        status.
    NotFound_404:
      description: The resource was not found.
    InternalServerError_500:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ServiceFailureResponse'
      description: Internal failure of the service.
    Unauthorized_401:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: User authentication was not effective (e.g. not provided, invalid
        or expired).
    Forbidded_403:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: User is not allowed to perform the request.
  schemas:
    RobotConfiguration:
      example:
        requestHeaders:
          Authorization:
          - Token eed3fc66-cfc8-4b11-9bf9-33493d95411b
        webhooks:
          dst: https://web.sandbox.signingtoday.com
        authentication:
          authMode: basic
          clientCert: <client certificate>
          password: A12345678z
          clientKey: clientKey
          username: jdo
      properties:
        requestHeaders:
          additionalProperties:
            items:
              type: string
            type: array
          description: Eventually the headers the application have to use during requests
          example:
            Authorization:
            - Token eed3fc66-cfc8-4b11-9bf9-33493d95411b
          type: object
        authentication:
          $ref: '#/components/schemas/RobotConfiguration_authentication'
        webhooks:
          $ref: '#/components/schemas/RobotConfiguration_webhooks'
      type: object
    SignerInstance:
      description: The Mapping of the Roles will be used in the new DST
      format: object
      properties:
        name:
          description: Name of the Signer
          example: Adam
          format: string
          type: string
        surname:
          description: Surname of the Signer
          example: Smith
          format: string
          type: string
        email:
          description: Email address of the Signer
          example: adam.smith@email.com
          format: string
          type: string
        phone:
          description: Phone number of the Signer
          example: +013392213450
          format: string
          type: string
        userUUID:
          description: LibroFirma UserUUID, if associated to. Otherwise null.
          example: a845e772-cb45-466f-9c02-d9dd06afa36e
          format: uuid
          type: string
      type: object
    CreateDigitalSignatureTransaction:
      description: |
        The **DST Template** from which will be created the DST
      example:
        template: false
        publicTemplate: false
        ccGroups:
        - Marketing
        - Marketing
        ccUsers:
        - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        documents:
        - signerGroups:
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          signatureRequests:
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          resource:
            filename: contract.pdf
            source:
              sourceURL: http://example.com/aeiou
              embeddedData: ""
              type: Embedded
            title: Sales Contract
            resourceType:
            - PDF_Document
            - PDF_Document
          forms:
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
        - signerGroups:
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          signatureRequests:
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          resource:
            filename: contract.pdf
            source:
              sourceURL: http://example.com/aeiou
              embeddedData: ""
              type: Embedded
            title: Sales Contract
            resourceType:
            - PDF_Document
            - PDF_Document
          forms:
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
        title: Real estate sales contract transaction
        urgent: false
        expiresAt: 2007-04-25T12:00:00Z
        status: toSign
        tags:
        - important
        - important
      properties:
        title:
          description: Title of the _Digital Signature Transaction_
          example: Real estate sales contract transaction
          format: string
          type: string
        documents:
          description: The document or documents of the _DST_
          format: array
          items:
            $ref: '#/components/schemas/CreateDocument'
          type: array
        status:
          description: Status of the _DST_
          enum:
          - draft
          - published
          example: toSign
          format: string
          type: string
        expiresAt:
          description: Date of expiration of the _DST_
          example: 2007-04-25T12:00:00Z
          format: date-time
          type: string
        tags:
          description: An array of tags for the DST. In such way is possible to tag
            in the same way some DSTs in order to keep them organized and been easy
            to find them through the custom search
          format: string
          items:
            example: important
            type: string
          type: array
        template:
          description: True if the _DST_ has been created from a template
          example: false
          format: boolean
          type: boolean
        publicTemplate:
          description: Indicates if a public template has been used to create the
            DST or not
          example: false
          format: boolean
          type: boolean
        ccGroups:
          description: Name of groups that are informed about the DST.
          format: array
          items:
            example: Marketing
            type: string
          type: array
        ccUsers:
          description: UUIDs of the users that are informed about the DST.
          format: array
          items:
            example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            format: uuid
            type: string
          type: array
        urgent:
          description: True if the DST is flagged as urgent
          example: false
          format: boolean
          type: boolean
      type: object
    CreateDocument:
      example:
        signerGroups:
        - signers:
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          _instance_id: 1
        - signers:
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          _instance_id: 1
        signatureRequests:
        - signProfile: PAdES
          reason: As the Buyer
          signerId: 2
          _instance_id: 1
          declinable: false
          extraData:
            st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
          withTimestamp: true
          description: The proponent
          restrictions:
          - rule: rule
            value: value
            operator: operator
          - rule: rule
            value: value
            operator: operator
          id: 3
        - signProfile: PAdES
          reason: As the Buyer
          signerId: 2
          _instance_id: 1
          declinable: false
          extraData:
            st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
          withTimestamp: true
          description: The proponent
          restrictions:
          - rule: rule
            value: value
            operator: operator
          - rule: rule
            value: value
            operator: operator
          id: 3
        resource:
          filename: contract.pdf
          source:
            sourceURL: http://example.com/aeiou
            embeddedData: ""
            type: Embedded
          title: Sales Contract
          resourceType:
          - PDF_Document
          - PDF_Document
        forms:
        - _instance_id: 1
          extraData:
            signatureRequestId: 1
          invisible: true
          filled: false
          type: SignatureForm
          positionX: 100.00
          positionY: 58.14
          toFill: true
          signerId: 1
          width: 10.1
          documentId: 3
          id: 2
          page: 1
          height: 5.66
        - _instance_id: 1
          extraData:
            signatureRequestId: 1
          invisible: true
          filled: false
          type: SignatureForm
          positionX: 100.00
          positionY: 58.14
          toFill: true
          signerId: 1
          width: 10.1
          documentId: 3
          id: 2
          page: 1
          height: 5.66
      properties:
        resource:
          $ref: '#/components/schemas/CreateDocument_resource'
        forms:
          description: The fillable elements of the document. Use the type field to
            identify textual fillable field and signature fields.
          format: array
          items:
            $ref: '#/components/schemas/FillableForm'
          type: array
        signatureRequests:
          description: The list of signature request of the document.
          format: array
          items:
            $ref: '#/components/schemas/SignatureRequest'
          type: array
        signerGroups:
          description: The sign plan for the document
          format: array
          items:
            $ref: '#/components/schemas/SignersGroup'
          type: array
      type: object
    DigitalSignatureTransaction:
      description: |
        The **Digital Signature Transaction** is the core object at the center of every `digital signature workflow` in Signing Today. It is a `collection` element and holds every document (to be signed or just attached to the transaction) as well as the signature plan required to fulfill the transaction; how many signatures are required, are there any forms to be filled, appearance, signature sequence, signers... everything starts here.
      example:
        template: false
        createdByUser: e6419924-fd1d-4c42-9fa2-88023461f5df
        documents:
        - signerGroups:
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          signatureRequests:
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          _instance_id: 1
          filledDocumentUuid: 192db8d8-4128-11ea-b77f-2e728ce88125
          signedDocumentUuid: 2a126504-4128-11ea-b77f-2e728ce88125
          id: 1
          forms:
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
          plainDocumentUuid: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          status: signed
        - signerGroups:
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          - signers:
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            - role: buyer
              _instance_id: 1
              phone: +013392213450
              surname: Smith
              name: Adam
              templateLabel: Buyer
              id: 1
              userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
              email: adam.smith@email.com
            _instance_id: 1
          signatureRequests:
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          - signProfile: PAdES
            reason: As the Buyer
            signerId: 2
            _instance_id: 1
            declinable: false
            extraData:
              st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
            withTimestamp: true
            description: The proponent
            restrictions:
            - rule: rule
              value: value
              operator: operator
            - rule: rule
              value: value
              operator: operator
            id: 3
          _instance_id: 1
          filledDocumentUuid: 192db8d8-4128-11ea-b77f-2e728ce88125
          signedDocumentUuid: 2a126504-4128-11ea-b77f-2e728ce88125
          id: 1
          forms:
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
          - _instance_id: 1
            extraData:
              signatureRequestId: 1
            invisible: true
            filled: false
            type: SignatureForm
            positionX: 100.00
            positionY: 58.14
            toFill: true
            signerId: 1
            width: 10.1
            documentId: 3
            id: 2
            page: 1
            height: 5.66
          plainDocumentUuid: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          status: signed
        publishedAt: 2007-04-05T11:10:42Z
        extraData:
          st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
        replaces: 0d563aea-e39b-42a5-ad9b-b4d06b379696
        replacedBy: a4f0cd5b-e49a-4692-a846-4455110eda74
        errorMessage: errorMessage
        resources:
        - createdAt: 2007-04-02T19:30:10Z
          filename: contract.pdf
          pages: 3
          size: 1024
          extraData:
            toSign: true
          domain: bit4id
          dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
          mimetype: application/pdf
          id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
          type: PDFResource
          title: Sales Contract
          url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
        - createdAt: 2007-04-02T19:30:10Z
          filename: contract.pdf
          pages: 3
          size: 1024
          extraData:
            toSign: true
          domain: bit4id
          dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
          mimetype: application/pdf
          id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
          type: PDFResource
          title: Sales Contract
          url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
        title: Real estate sales contract transaction
        expiresAt: 2007-04-25T12:00:00Z
        signatures:
        - _instance_id: 1
          extraData:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          signatureRequestId: 2
          declinedReason: Reason of declination
          signedAt: 2021-10-17T07:26:00Z
          documentId: 3
          status: signed
        - _instance_id: 1
          extraData:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          signatureRequestId: 2
          declinedReason: Reason of declination
          signedAt: 2021-10-17T07:26:00Z
          documentId: 3
          status: signed
        tags:
        - important
        - important
        createdAt: 2007-04-02T19:30:10Z
        publicTemplate: false
        deletedAt: 2007-04-02T19:30:10Z
        ccGroups:
        - Marketing
        - Marketing
        ccUsers:
        - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        domain: bit4id
        visibleTo:
        - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        id: d9b4df92-cf85-48dc-a2de-955f518a2992
        urgent: false
        status: published
        updatedAt: 2007-04-02T19:30:10Z
      properties:
        id:
          description: The uuid code that identifies the Digital Signature Transaction
          example: d9b4df92-cf85-48dc-a2de-955f518a2992
          format: uuid
          readOnly: true
          type: string
        domain:
          description: The _domain_ is the Organization which a user or a DST belongs
          example: bit4id
          format: any
          type: string
        title:
          description: Title of the Digital Signature Transaction
          example: Real estate sales contract transaction
          format: any
          type: string
        replaces:
          description: The _DST_ which this one replaces
          example: 0d563aea-e39b-42a5-ad9b-b4d06b379696
          format: uuid
          readOnly: true
          type: string
        replacedBy:
          description: The _DST_ which has replaces the current one
          example: a4f0cd5b-e49a-4692-a846-4455110eda74
          format: uuid
          readOnly: true
          type: string
        createdByUser:
          description: The user created the Digital Signature Transaction
          example: e6419924-fd1d-4c42-9fa2-88023461f5df
          format: uuid
          readOnly: true
          type: string
        createdAt:
          description: Date of creation of the Digital Signature Transaction
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        documents:
          description: |
            The _documents_ field is an array containing document objects, where everyone of them is defined as follows
          items:
            $ref: '#/components/schemas/Document'
          type: array
        publishedAt:
          description: The _date-time_ the DST has been published
          example: 2007-04-05T11:10:42Z
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          description: Indicates when the DST will expire
          example: 2007-04-25T12:00:00Z
          format: date-time
          readOnly: true
          type: string
        resources:
          description: An array of resources attached to the _DST_, each one defined
            as follows
          items:
            $ref: '#/components/schemas/LFResource'
          type: array
        signatures:
          description: An array of signatures, each one defined as follows
          items:
            $ref: '#/components/schemas/Signature'
          type: array
        status:
          description: Status of the _Digital Signature Transaction_
          enum:
          - draft
          - downloadingInDraft
          - downloadingInPublished
          - published
          - toFill
          - toSign
          - expired
          - signed
          - rejected
          - error
          example: published
          readOnly: true
          type: string
        errorMessage:
          description: The explication of the occurred error
          type: string
        deletedAt:
          description: Indicates when the _DST_ has been deleted
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        tags:
          description: An array of tags for the _DST_. In such way is possible to
            tag in the same way some _DSTs_ in order to keep them organized and been
            easy to find them through the custom search
          items:
            example: important
            type: string
          type: array
        template:
          description: Indicates if a template has been used to create the DST or
            not
          example: false
          format: boolean
          type: boolean
        publicTemplate:
          description: Indicates if a public template has been used to create the
            DST or not
          example: false
          format: boolean
          type: boolean
        extraData:
          additionalProperties:
            type: object
          description: Extra information about the _DST_
          example:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          type: object
        visibleTo:
          description: UUIDs of the users to which the DST is visible
          items:
            example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            format: uuid
            type: string
          type: array
        ccGroups:
          description: Name of groups that are informed about the DST
          items:
            example: Marketing
            type: string
          type: array
        ccUsers:
          description: UUIDs of the users that are informed about the DST
          items:
            example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            format: uuid
            type: string
          type: array
        urgent:
          description: True if the DST is flagged as urgent
          example: false
          type: boolean
        updatedAt:
          description: Indicates the last update of the DST, such as the performing
            of a signature
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
      title: Digital Signature Transaction
      type: object
    Document:
      example:
        signerGroups:
        - signers:
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          _instance_id: 1
        - signers:
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          - role: buyer
            _instance_id: 1
            phone: +013392213450
            surname: Smith
            name: Adam
            templateLabel: Buyer
            id: 1
            userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            email: adam.smith@email.com
          _instance_id: 1
        signatureRequests:
        - signProfile: PAdES
          reason: As the Buyer
          signerId: 2
          _instance_id: 1
          declinable: false
          extraData:
            st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
          withTimestamp: true
          description: The proponent
          restrictions:
          - rule: rule
            value: value
            operator: operator
          - rule: rule
            value: value
            operator: operator
          id: 3
        - signProfile: PAdES
          reason: As the Buyer
          signerId: 2
          _instance_id: 1
          declinable: false
          extraData:
            st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
          withTimestamp: true
          description: The proponent
          restrictions:
          - rule: rule
            value: value
            operator: operator
          - rule: rule
            value: value
            operator: operator
          id: 3
        _instance_id: 1
        filledDocumentUuid: 192db8d8-4128-11ea-b77f-2e728ce88125
        signedDocumentUuid: 2a126504-4128-11ea-b77f-2e728ce88125
        id: 1
        forms:
        - _instance_id: 1
          extraData:
            signatureRequestId: 1
          invisible: true
          filled: false
          type: SignatureForm
          positionX: 100.00
          positionY: 58.14
          toFill: true
          signerId: 1
          width: 10.1
          documentId: 3
          id: 2
          page: 1
          height: 5.66
        - _instance_id: 1
          extraData:
            signatureRequestId: 1
          invisible: true
          filled: false
          type: SignatureForm
          positionX: 100.00
          positionY: 58.14
          toFill: true
          signerId: 1
          width: 10.1
          documentId: 3
          id: 2
          page: 1
          height: 5.66
        plainDocumentUuid: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        status: signed
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        id:
          description: Unique Id of the document
          example: 1
          format: int32
          type: integer
        plainDocumentUuid:
          description: Id of the associated Resource (plain PDF file e.g. the one
            uploaded by the user)
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        filledDocumentUuid:
          description: Id of the associated PDF file that contains all the forms filled
            (present only once the whole document has been filled)
          example: 192db8d8-4128-11ea-b77f-2e728ce88125
          format: uuid
          readOnly: true
          type: string
        signedDocumentUuid:
          description: Id of the associated PDF file that contains all the signatures  (present
            only once the whole document has been signed)
          example: 2a126504-4128-11ea-b77f-2e728ce88125
          format: uuid
          readOnly: true
          type: string
        status:
          description: |
            The status of the _Document_, which can be:
            - "plain": The document has been correctly updated by the user
            - "filled": The document has been filled
            - "signed": The document has been signed
          enum:
          - plain
          - filled
          - signed
          example: signed
          format: any
          readOnly: true
          type: string
        forms:
          description: The fillable elements of the document. Use the type field to
            identify textual fillable fields and signature fields
          format: array
          items:
            $ref: '#/components/schemas/FillableForm'
          type: array
        signatureRequests:
          description: The list of signature request of the document
          format: array
          items:
            $ref: '#/components/schemas/SignatureRequest'
          type: array
        signerGroups:
          description: The sign plan for the document
          format: array
          items:
            $ref: '#/components/schemas/SignersGroup'
          type: array
      type: object
    AuditRecord:
      example:
        at: 2020-01-17T07:26:00Z
        _instance_id: 1
        fillableFormId: 3
        dstId: 00f462e8-333c-45d6-bdef-95797cc1a2a9
        signatureRequestId: 1
        documentId: 2
        noteId: 2
        event: stage_signed
        value: |-
          utente registrato John Doe (jdo@bit4id.com) ha pubblicato la DST "Contratto" (aeaa6c62-8b59-4fac-9419-8e9a95aea410)
          La DST contiene i documenti:
          - "Contratto Preliminare" con compilatori [John Doe (jdo@bit4id.com)] e firmatari [Adam Smith (adam.smith@email.com)]
        signer:
          role: buyer
          surname: Smith
          name: Adam
          userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          email: adam.smith@email.com
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        at:
          example: 2020-01-17T07:26:00Z
          format: date-time
          type: string
        event:
          enum:
          - event_published
          - event_form_fill
          - event_signature
          - event_rejection
          - event_replacement
          - event_note_add
          - event_note_modify
          - event_note_delete
          - event_solicitation
          - stage_to_fill
          - stage_to_sign
          - stage_expired
          - stage_signed
          - stage_rejected
          - event_upload_alfresco
          example: stage_signed
          type: string
        signer:
          $ref: '#/components/schemas/SignerRecord'
        value:
          example: |-
            utente registrato John Doe (jdo@bit4id.com) ha pubblicato la DST "Contratto" (aeaa6c62-8b59-4fac-9419-8e9a95aea410)
            La DST contiene i documenti:
            - "Contratto Preliminare" con compilatori [John Doe (jdo@bit4id.com)] e firmatari [Adam Smith (adam.smith@email.com)]
          type: string
        dstId:
          example: 00f462e8-333c-45d6-bdef-95797cc1a2a9
          format: uuid
          type: string
        documentId:
          example: 2
          format: int32
          type: integer
        fillableFormId:
          example: 3
          format: int32
          type: integer
        signatureRequestId:
          example: 1
          format: int32
          type: integer
        noteId:
          example: 2
          format: int64
          type: integer
      type: object
    SignerRecord:
      description: The details about the signer
      example:
        role: buyer
        surname: Smith
        name: Adam
        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        email: adam.smith@email.com
      properties:
        name:
          example: Adam
          type: string
        surname:
          example: Smith
          type: string
        email:
          example: adam.smith@email.com
          type: string
        role:
          example: buyer
          type: string
        userUUID:
          description: LibroFirma UserUUID, if associated to. Otherwise null.
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
    FillableForm:
      description: Two type of fillable exists; `SignatureForm` and `TextForm`. The
        former represents the association with the SignatureRequest, the latter represents
        any editable text form field to be filled before the signature process begins.
      example:
        _instance_id: 1
        extraData:
          signatureRequestId: 1
        invisible: true
        filled: false
        type: SignatureForm
        positionX: 100.00
        positionY: 58.14
        toFill: true
        signerId: 1
        width: 10.1
        documentId: 3
        id: 2
        page: 1
        height: 5.66
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        id:
          description: Id of the _form_
          example: 2
          format: int32
          type: integer
        documentId:
          description: Id of the document
          example: 3
          format: int32
          type: integer
        type:
          description: Type of the fill form
          example: SignatureForm
          type: string
        positionX:
          description: Position onto the X axis of the form, expressed in percentage
          example: 100.00
          format: float
          type: number
        positionY:
          description: Position onto the Y axis of the form, expressed in percentage
          example: 58.14
          format: float
          type: number
        width:
          description: Width of the form expressed in percentage
          example: 10.1
          format: float
          type: number
        height:
          description: Height of the form expressed in percentage
          example: 5.66
          format: float
          type: number
        page:
          description: Page of the document where the form is
          example: 1
          format: int64
          type: integer
        signerId:
          description: Id of the signer in the sign plan
          example: 1
          format: int32
          type: integer
        toFill:
          description: |
            **True** if the field need to be filled by the user. In case of a Signature it is **false**
          example: true
          type: boolean
        filled:
          description: True ones the form has been filled
          example: false
          type: boolean
        invisible:
          description: True if the appearance has to be hidden
          example: true
          type: boolean
        extraData:
          additionalProperties:
            type: object
          description: Extra information about the form
          example:
            signatureRequestId: 1
          type: object
      type: object
    SignersGroup:
      example:
        signers:
        - role: buyer
          _instance_id: 1
          phone: +013392213450
          surname: Smith
          name: Adam
          templateLabel: Buyer
          id: 1
          userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          email: adam.smith@email.com
        - role: buyer
          _instance_id: 1
          phone: +013392213450
          surname: Smith
          name: Adam
          templateLabel: Buyer
          id: 1
          userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          email: adam.smith@email.com
        _instance_id: 1
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        signers:
          items:
            $ref: '#/components/schemas/Signer'
          type: array
      type: object
    TrustedDevice:
      example:
        _instance_id: 1
        name: John Doe"s Iphone
        registeredAt: 2021-10-17T07:26:00Z
        userId: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        deviceId: e6419924-fd1d-4c42-9fa2-88023461f5df
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        userId:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        deviceId:
          example: e6419924-fd1d-4c42-9fa2-88023461f5df
          type: string
        name:
          description: Application defined label to identify the device
          example: John Doe"s Iphone
          type: string
        registeredAt:
          example: 2021-10-17T07:26:00Z
          format: date-time
          type: string
      type: object
    Signer:
      example:
        role: buyer
        _instance_id: 1
        phone: +013392213450
        surname: Smith
        name: Adam
        templateLabel: Buyer
        id: 1
        userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        email: adam.smith@email.com
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        id:
          example: 1
          format: int32
          type: integer
        name:
          example: Adam
          type: string
        surname:
          example: Smith
          type: string
        email:
          example: adam.smith@email.com
          type: string
        phone:
          example: +013392213450
          type: string
        role:
          example: buyer
          type: string
        userUUID:
          description: LibroFirma UserUUID, if associated to. Otherwise null.
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        templateLabel:
          description: Label used to link signers to placeholders in DST template,
            otherwise null.
          example: Buyer
          type: string
      type: object
    SignatureRequest:
      description: The association with the document is hold in the extraData of the
        FillableForm.
      example:
        signProfile: PAdES
        reason: As the Buyer
        signerId: 2
        _instance_id: 1
        declinable: false
        extraData:
          st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
        withTimestamp: true
        description: The proponent
        restrictions:
        - rule: rule
          value: value
          operator: operator
        - rule: rule
          value: value
          operator: operator
        id: 3
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        id:
          example: 3
          format: int32
          type: integer
        reason:
          example: As the Buyer
          type: string
        description:
          example: The proponent
          type: string
        signerId:
          example: 2
          format: int32
          type: integer
        signProfile:
          enum:
          - CAdES
          - PAdES
          example: PAdES
          type: string
        withTimestamp:
          example: true
          type: boolean
        declinable:
          example: false
          type: boolean
        restrictions:
          items:
            $ref: '#/components/schemas/SignatureRestriction'
          type: array
        extraData:
          additionalProperties:
            type: object
          example:
            st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
          type: object
      type: object
    SignatureRestriction:
      example:
        rule: rule
        value: value
        operator: operator
      properties:
        rule:
          type: string
        operator:
          type: string
        value:
          type: string
      type: object
    Signature:
      example:
        _instance_id: 1
        extraData:
          st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
        signatureRequestId: 2
        declinedReason: Reason of declination
        signedAt: 2021-10-17T07:26:00Z
        documentId: 3
        status: signed
      properties:
        _instance_id:
          description: It is a reference for internal use
          example: 1
          format: int64
          readOnly: true
          type: integer
        documentId:
          description: Id of the document
          example: 3
          format: int32
          type: integer
        signatureRequestId:
          description: Id of the requested signature
          example: 2
          format: int32
          type: integer
        signedAt:
          description: Indicates when the DST has been signed
          example: 2021-10-17T07:26:00Z
          format: date-time
          type: string
        declinedReason:
          example: Reason of declination
          format: any
          type: string
        status:
          description: Status of the signature, which can be _signed_ or _declined_
          enum:
          - signed
          - declined
          example: signed
          format: any
          readOnly: true
          type: string
        extraData:
          additionalProperties:
            type: object
          description: Extra data of the signature
          example:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          format: any
          type: object
      type: object
    User:
      description: |
        The **User** object is the one that serializes the users of the _Organizations_. The _User_ has field that identifies the generality of the person who has been registered and uses the platform, as well as the digital identities through which he can sign documents.
      example:
        role: signer
        capabilities:
        - user.create.all
        - user.create.all
        extraData:
          st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
        groups:
        - domain: bit4id
          name: Marketing BU
          id: 1
        - domain: bit4id
          name: Marketing BU
          id: 1
        automatic: false
        language: en
        createdAt: 2007-04-02T19:30:10Z
        deletedAt: 2007-04-02T19:30:10Z
        phone: +013392213450
        createdBy: 9a608f1a-e42a-4d05-8e2b-1df8ec63cd5d
        surname: Doe
        domain: bit4id
        name: John
        id: e6419924-fd1d-4c42-9fa2-88023461f5df
        email: john.doe@email.com
        username: jdo
      properties:
        id:
          description: The unique id of the User
          example: e6419924-fd1d-4c42-9fa2-88023461f5df
          format: uuid
          readOnly: true
          type: string
        username:
          description: The username of the User. The username is used to login
          example: jdo
          format: any
          type: string
        domain:
          description: The _domain_ is the Organization which a user or a DST belongs
          example: bit4id
          format: any
          type: string
        language:
          description: The default language of the User
          enum:
          - it
          - en
          - es
          - fr
          example: en
          format: string
          type: string
        name:
          description: The name of the User
          example: John
          format: any
          type: string
        surname:
          description: The name of the User
          example: Doe
          format: any
          type: string
        email:
          description: The email address of the User
          example: john.doe@email.com
          format: email
          type: string
        phone:
          description: The phone number of the User
          example: +013392213450
          format: number
          type: string
        role:
          description: |
            The role of the User. The **admin** can create users, as well as DSTs and can sign. The **instructor** can create DSTs and sign. The **signer** can only sign documents.
          enum:
          - admin
          - instructor
          - signer
          example: signer
          format: any
          type: string
        groups:
          description: A group of users. This is useful during DSTs creation, it is
            possible to select a group as signers. This way all the components of
            that group have to sign the document
          format: array
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
        capabilities:
          description: The capabilities represents the action a user is able to do
          enum:
          - user.pwd.clear
          - user.create.all
          - user.access.all
          - user.delete.all
          - dst.list.all
          - dst.delete.all
          - dst.create.modify_all
          - devices.list.all
          - devices.delete.all
          - organizations.access.write.user
          format: array
          items:
            example: user.create.all
            type: string
          type: array
        createdBy:
          description: The one which created the User
          example: 9a608f1a-e42a-4d05-8e2b-1df8ec63cd5d
          format: uuid
          readOnly: true
          type: string
        createdAt:
          description: The date of the creation of the User
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          description: The date of deletion of the User
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        automatic:
          description: If true the user is automatic
          example: false
          readOnly: true
          type: boolean
        extraData:
          additionalProperties:
            type: object
          description: Extra data associated to the User
          example:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          format: object
          type: object
      type: object
    UserGroup:
      description: A group of users. This is useful during DSTs creation, it is possible
        to select a group as signers. This way all the components of that group have
        to sign the document
      example:
        domain: bit4id
        name: Marketing BU
        id: 1
      properties:
        id:
          description: Unique id of the Group
          example: 1
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the Group
          example: Marketing BU
          format: any
          type: string
        domain:
          description: Organization which the Group belongs
          example: bit4id
          format: any
          type: string
      type: object
    AuthCredential:
      properties:
        id:
          example: e6419924-fd1d-4c42-9fa2-88023461f5df
          format: uuid
          readOnly: true
          type: string
        domain:
          example: alfa
          type: string
        username:
          example: a.tramontana
          type: string
        password:
          example: b1946ac92492d2347c6235b4d2611184
          type: string
      type: object
    NotificationEvent:
      example:
        dstTitle: Contract
        dstId: d6bb4c8f-37bf-4900-a1e4-dd9b0939cafb
        id: 1
        time: 2007-04-02T19:30:10Z
        event: evt_dst_status_signed
        userId: 1ca229c8-2a99-4f3e-9421-36377fd8d9e5
        email: jdo@bit4id.com
        username: johndoe
      properties:
        id:
          example: 1
          format: int64
          readOnly: true
          type: integer
        time:
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        dstId:
          example: d6bb4c8f-37bf-4900-a1e4-dd9b0939cafb
          format: uuid
          readOnly: true
          type: string
        userId:
          example: 1ca229c8-2a99-4f3e-9421-36377fd8d9e5
          format: uuid
          readOnly: true
          type: string
        dstTitle:
          example: Contract
          type: string
        username:
          description: |
            If present limits the notification to one user account,
            otherwise is to be intended for all (active)
            user accounts (e.g. PC/devices, etc).
            Indeed one principal (User) could have multiple
            account (credentials)
          example: johndoe
          type: string
        email:
          example: jdo@bit4id.com
          type: string
        event:
          enum:
          - dst_status_published
          - dst_status_expired
          - dst_status_rejected
          - dst_status_signed
          - dst_status_error
          - dst_alert_fill
          - dst_alert_sign
          - dst_alert_note_added
          - dst_alert_note_modified
          - dst_alert_note_deleted
          example: evt_dst_status_signed
          readOnly: true
          type: string
      type: object
    ErrorResponse:
      properties:
        code:
          description: One of a server-defined set of error codes.
          example: BadArgument
          type: string
        message:
          description: A human-readable representation of the error.
          example: The parameter "age" cannot be negative!
          type: string
        target:
          description: The target of the error.
          example: age
          type: string
      type: object
    ServiceFailureResponse:
      properties:
        code:
          description: One of a server-defined set of error codes.
          example: IOException
          type: string
        message:
          description: A human-readable representation of the error.
          example: Cannot connect to the datasource!
          type: string
      type: object
    LFResource:
      example:
        createdAt: 2007-04-02T19:30:10Z
        filename: contract.pdf
        pages: 3
        size: 1024
        extraData:
          toSign: true
        domain: bit4id
        dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
        mimetype: application/pdf
        id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
        type: PDFResource
        title: Sales Contract
        url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
      properties:
        id:
          description: Unique id of the resource
          example: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
          format: uuid
          type: string
        domain:
          description: The _domain_ is the Organization which a user or a DST belongs
          example: bit4id
          format: any
          type: string
        type:
          description: Type of the resource, for example a _PDFResource_
          example: PDFResource
          format: any
          readOnly: true
          type: string
        dstUuid:
          description: Unique id of the _DST_ which the resource is correlated
          example: d9b4df92-cf85-48dc-a2de-955f518a2992
          format: uuid
          readOnly: true
          type: string
        title:
          description: Title of the resource
          example: Sales Contract
          format: any
          type: string
        filename:
          description: Name of the file uploaded, with its extension as well
          example: contract.pdf
          format: any
          type: string
        url:
          description: Url of the resource
          example: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
          format: url
          readOnly: true
          type: string
        size:
          description: Size of the resource
          example: 1024
          format: int64
          readOnly: true
          type: integer
        createdAt:
          description: Indicates when the resource has been uploaded
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        mimetype:
          description: _MIME_ type of the resource
          example: application/pdf
          format: any
          readOnly: true
          type: string
        pages:
          description: Indicates how many pages the resource is
          example: 3
          format: int32
          type: integer
        extraData:
          additionalProperties:
            type: object
          description: Extra data of the resource
          example:
            toSign: true
          format: any
          type: object
      type: object
    Identity:
      example:
        providerData:
          smartcardID: -1121978858
          middlewareID: bit4xpki
          reader: Generic Smart Card Reader Interface 0
          tokenInfo:
            serialNumber: "7430010005961358"
            ulTotalPublicMemory: 80000
            ulTotalPrivateMemory: 80000
            ulMinPinLen: 4
            manufacturerID: Bit4id
            flags: 1037
            model: JS2048 (LB)
            ulFreePrivateMemory: 41168
            label: CNS
            ulFreePublicMemory: 41168
            ulMaxPinLen: 8
          ATR: 3bff1800008131fe55006b02090403010101434e5310318065
        rawCertificate: rawCertificate
        label: Token John Doe
        providerType: token
        tags:
        - qualified
        - qualified
        issuerCommonName: Emicert
        valid: true
        appearance:
          createdAt: 2007-04-02T19:30:10Z
          filename: contract.pdf
          pages: 3
          size: 1024
          extraData:
            toSign: true
          domain: bit4id
          dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
          mimetype: application/pdf
          id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
          type: PDFResource
          title: Sales Contract
          url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
        provider: Approval Signing Today
        subjectCommonName: John Doe
        expireDate: 2022-12-13T23:59:59Z
        id: abd562ae-e8ab-4cfd-a688-395e06eea9ff
        actions:
          key: actions
      properties:
        id:
          example: abd562ae-e8ab-4cfd-a688-395e06eea9ff
          format: uuid
          type: string
        actions:
          additionalProperties:
            type: string
          type: object
        provider:
          example: Approval Signing Today
          type: string
        label:
          example: Token John Doe
          type: string
        providerType:
          example: token
          type: string
        subjectCommonName:
          example: John Doe
          type: string
        issuerCommonName:
          example: Emicert
          type: string
        expireDate:
          example: 2022-12-13T23:59:59Z
          format: date-time
          type: string
        rawCertificate:
          type: string
        appearance:
          $ref: '#/components/schemas/LFResource'
        providerData:
          $ref: '#/components/schemas/Identity_providerData'
        valid:
          example: true
          type: boolean
        tags:
          items:
            example: qualified
            type: string
          type: array
      type: object
    NotificationsResponse:
      example:
        values:
        - dstTitle: Contract
          dstId: d6bb4c8f-37bf-4900-a1e4-dd9b0939cafb
          id: 1
          time: 2007-04-02T19:30:10Z
          event: evt_dst_status_signed
          userId: 1ca229c8-2a99-4f3e-9421-36377fd8d9e5
          email: jdo@bit4id.com
          username: johndoe
        - dstTitle: Contract
          dstId: d6bb4c8f-37bf-4900-a1e4-dd9b0939cafb
          id: 1
          time: 2007-04-02T19:30:10Z
          event: evt_dst_status_signed
          userId: 1ca229c8-2a99-4f3e-9421-36377fd8d9e5
          email: jdo@bit4id.com
          username: johndoe
        count: 1
      properties:
        count:
          example: 1
          format: int64
          type: integer
        values:
          items:
            $ref: '#/components/schemas/NotificationEvent'
          type: array
      type: object
    DSTNote:
      description: |
        The _DSTNote_ represents a text note that can be attached to a DST whenever an entitled user needs it (when requesting for clarifications, informing of the proceedings, adding context)
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        dstId: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
        id: 32
        text: This a DSTNote sample
        userId: 123e4567-e89b-12d3-a456-426655440000
      properties:
        id:
          description: The id of the note
          example: 32
          format: int64
          type: integer
        dstId:
          description: The _UUID_ code of the Digital Signature Transaction
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        userId:
          description: The _UUID_ code of the user which created the _Note_
          example: 123e4567-e89b-12d3-a456-426655440000
          format: uuid
          type: string
        createdAt:
          description: The _data-time_ of the note creation
          format: date-time
          type: string
        text:
          description: Actual content of the _DST Note_
          example: This a DSTNote sample
          format: any
          type: string
      type: object
    SAMLToken:
      properties:
        _not_onorafter:
          example: 2019-03-01T16:46:59Z
          format: date-time
          type: string
        surname:
          example: Palazzo
          type: string
        givenName:
          example: Vincenzo
          type: string
        commonName:
          example: Vincenzo Palazzo
          type: string
        rfc822Mailbox:
          example: vpa@bit4id.com
          type: string
        _not_before:
          example: 2019-03-01T16:41:29Z
          format: date-time
          type: string
        userid:
          example: VP-51635
          type: string
        mailAlternateAddress:
          example: vpa@bit4id.com
          type: string
        eduPersonOrgDN:
          example: cc3dbbdd1e7cb592cb2ba24d461ec24656f3daa4@infn.it
          type: string
        eduPersonPrincipalName:
          example: VP-51635@infn.it
          type: string
        isMemberOf:
          items:
            type: string
          type: array
        groups:
          example: []
          items:
            type: string
          type: array
        displayName:
          example: Vincenzo Palazzo
          type: string
        eduPersonTargetedID:
          $ref: '#/components/schemas/SAMLToken_eduPersonTargetedID'
        _cookies:
          properties: {}
          type: string
      type: object
    Organization:
      example:
        settings:
          defaultDSTExpire_days: 30
          defaultLanguage: it
          alfrescoProperties:
            password: password
            baseNodeId: baseNodeId
            basePath: basePath
            relativePath: relativePath
            type: rest
            enabled: false
            username: username
        deletedAt: 2007-04-02T19:30:10Z
        contactEmail: contactEmail
        nation: nation
        city: city
        publicSettings:
          logoPath: logoPath
        name: name
        privateSettings:
          tags:
          - important
          - urgent
        emailOverrideFolderPath: emailOverrideFolderPath
        id: id
        contactPhone: contactPhone
      properties:
        id:
          type: string
        emailOverrideFolderPath:
          type: string
        name:
          type: string
        contactEmail:
          type: string
        contactPhone:
          type: string
        nation:
          type: string
        city:
          type: string
        deletedAt:
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        privateSettings:
          $ref: '#/components/schemas/OrganizationPrivateSettings'
        publicSettings:
          $ref: '#/components/schemas/OrganizationPublicSettings'
        settings:
          $ref: '#/components/schemas/OrganizationSettings'
      type: object
    Domain:
      description: The _domain_ is the Organization which a user or a DST belongs
      example: bit4id
      format: any
      type: string
    AlfrescoSync:
      example:
        completed_at: 2007-04-02T19:30:10Z
        id: id
        message: message
        status: RUNNING
      properties:
        id:
          readOnly: true
          type: string
        status:
          enum:
          - NOT_SCHEDULED
          - ENQUEUED
          - RUNNING
          - FAILED
          - COMPLETED
          example: RUNNING
          readOnly: true
          type: string
        completed_at:
          example: 2007-04-02T19:30:10Z
          format: date-time
          readOnly: true
          type: string
        message:
          readOnly: true
          type: string
      type: object
    DSTStatusChangedNotification:
      properties:
        status:
          enum:
          - toFill
          - toSign
          - expired
          - performed
          - error
          type: string
        dst:
          example: 20b772dc-5ec2-4ae0-9c06-95238d40c6bc
          format: uuid
          type: string
        reason:
          type: string
      type: object
    SignatureStatusChangedNotification:
      properties:
        status:
          enum:
          - pending
          - performed
          - expired
          - error
          - declined
          type: string
        group:
          format: int32
          type: integer
        action:
          enum:
          - fill
          - sign
          type: string
        dst:
          $ref: '#/components/schemas/SignatureStatusChangedNotification_dst'
        fillableForm:
          $ref: '#/components/schemas/FillableForm'
        signature:
          format: int32
          type: integer
        signer:
          example: admin.test.com
          type: string
        document:
          $ref: '#/components/schemas/SignatureStatusChangedNotification_document'
        automatic:
          example: false
          type: boolean
        page:
          format: int32
          type: integer
      type: object
    RobotAuthenticationToken:
      example:
        accessToken: 19a6f7b6-e558-46c7-ac1c-ed4fea78e644
      properties:
        accessToken:
          example: 19a6f7b6-e558-46c7-ac1c-ed4fea78e644
          type: string
    inline_object:
      properties:
        username:
          description: The username in the form _username_@_domain_ where *domain*
            is the organization the user belongs to
          example: username@bit4id
          type: string
        password:
          description: This is the actual password of the user
          example: a12345678z
          type: string
        grant_type:
          description: A parameter that indicates the type of the grant in order to
            perform the basic authentication
          enum:
          - password
          example: password
          type: string
      type: object
    inline_response_200:
      example:
        access_token: 5c7fe85e-5ccd-4ae7-9629-ed49f969eee9
        refresh_token: ef1185f4-2af7-4bf2-acd5-3c4b2e7dad72
        scope: all
        token_type: bearer
        expires_in: 30623
      properties:
        access_token:
          example: 5c7fe85e-5ccd-4ae7-9629-ed49f969eee9
          type: string
        token_type:
          example: bearer
          type: string
        refresh_token:
          example: ef1185f4-2af7-4bf2-acd5-3c4b2e7dad72
          type: string
        expires_in:
          example: 30623
          format: int64
          type: integer
        scope:
          example: all
          type: string
    DSTsGetResponse:
      example:
        values:
        - template: false
          createdByUser: e6419924-fd1d-4c42-9fa2-88023461f5df
          documents:
          - signerGroups:
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            signatureRequests:
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            _instance_id: 1
            filledDocumentUuid: 192db8d8-4128-11ea-b77f-2e728ce88125
            signedDocumentUuid: 2a126504-4128-11ea-b77f-2e728ce88125
            id: 1
            forms:
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            plainDocumentUuid: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            status: signed
          - signerGroups:
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            signatureRequests:
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            _instance_id: 1
            filledDocumentUuid: 192db8d8-4128-11ea-b77f-2e728ce88125
            signedDocumentUuid: 2a126504-4128-11ea-b77f-2e728ce88125
            id: 1
            forms:
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            plainDocumentUuid: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            status: signed
          publishedAt: 2007-04-05T11:10:42Z
          extraData:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          replaces: 0d563aea-e39b-42a5-ad9b-b4d06b379696
          replacedBy: a4f0cd5b-e49a-4692-a846-4455110eda74
          errorMessage: errorMessage
          resources:
          - createdAt: 2007-04-02T19:30:10Z
            filename: contract.pdf
            pages: 3
            size: 1024
            extraData:
              toSign: true
            domain: bit4id
            dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
            mimetype: application/pdf
            id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
            type: PDFResource
            title: Sales Contract
            url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
          - createdAt: 2007-04-02T19:30:10Z
            filename: contract.pdf
            pages: 3
            size: 1024
            extraData:
              toSign: true
            domain: bit4id
            dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
            mimetype: application/pdf
            id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
            type: PDFResource
            title: Sales Contract
            url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
          title: Real estate sales contract transaction
          expiresAt: 2007-04-25T12:00:00Z
          signatures:
          - _instance_id: 1
            extraData:
              st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
            signatureRequestId: 2
            declinedReason: Reason of declination
            signedAt: 2021-10-17T07:26:00Z
            documentId: 3
            status: signed
          - _instance_id: 1
            extraData:
              st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
            signatureRequestId: 2
            declinedReason: Reason of declination
            signedAt: 2021-10-17T07:26:00Z
            documentId: 3
            status: signed
          tags:
          - important
          - important
          createdAt: 2007-04-02T19:30:10Z
          publicTemplate: false
          deletedAt: 2007-04-02T19:30:10Z
          ccGroups:
          - Marketing
          - Marketing
          ccUsers:
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          domain: bit4id
          visibleTo:
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          id: d9b4df92-cf85-48dc-a2de-955f518a2992
          urgent: false
          status: published
          updatedAt: 2007-04-02T19:30:10Z
        - template: false
          createdByUser: e6419924-fd1d-4c42-9fa2-88023461f5df
          documents:
          - signerGroups:
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            signatureRequests:
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            _instance_id: 1
            filledDocumentUuid: 192db8d8-4128-11ea-b77f-2e728ce88125
            signedDocumentUuid: 2a126504-4128-11ea-b77f-2e728ce88125
            id: 1
            forms:
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            plainDocumentUuid: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            status: signed
          - signerGroups:
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            signatureRequests:
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            _instance_id: 1
            filledDocumentUuid: 192db8d8-4128-11ea-b77f-2e728ce88125
            signedDocumentUuid: 2a126504-4128-11ea-b77f-2e728ce88125
            id: 1
            forms:
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            plainDocumentUuid: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
            status: signed
          publishedAt: 2007-04-05T11:10:42Z
          extraData:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          replaces: 0d563aea-e39b-42a5-ad9b-b4d06b379696
          replacedBy: a4f0cd5b-e49a-4692-a846-4455110eda74
          errorMessage: errorMessage
          resources:
          - createdAt: 2007-04-02T19:30:10Z
            filename: contract.pdf
            pages: 3
            size: 1024
            extraData:
              toSign: true
            domain: bit4id
            dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
            mimetype: application/pdf
            id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
            type: PDFResource
            title: Sales Contract
            url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
          - createdAt: 2007-04-02T19:30:10Z
            filename: contract.pdf
            pages: 3
            size: 1024
            extraData:
              toSign: true
            domain: bit4id
            dstUuid: d9b4df92-cf85-48dc-a2de-955f518a2992
            mimetype: application/pdf
            id: 05a80817-a3a5-48fe-83c0-0df0f48a2a26
            type: PDFResource
            title: Sales Contract
            url: https://storage.myapi.com/resource/05a80817-a3a5-48fe-83c0-0df0f48a2a26
          title: Real estate sales contract transaction
          expiresAt: 2007-04-25T12:00:00Z
          signatures:
          - _instance_id: 1
            extraData:
              st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
            signatureRequestId: 2
            declinedReason: Reason of declination
            signedAt: 2021-10-17T07:26:00Z
            documentId: 3
            status: signed
          - _instance_id: 1
            extraData:
              st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
            signatureRequestId: 2
            declinedReason: Reason of declination
            signedAt: 2021-10-17T07:26:00Z
            documentId: 3
            status: signed
          tags:
          - important
          - important
          createdAt: 2007-04-02T19:30:10Z
          publicTemplate: false
          deletedAt: 2007-04-02T19:30:10Z
          ccGroups:
          - Marketing
          - Marketing
          ccUsers:
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          domain: bit4id
          visibleTo:
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          id: d9b4df92-cf85-48dc-a2de-955f518a2992
          urgent: false
          status: published
          updatedAt: 2007-04-02T19:30:10Z
        count: 1
      properties:
        count:
          example: 1
          format: int64
          type: integer
        values:
          items:
            $ref: '#/components/schemas/DigitalSignatureTransaction'
          type: array
    inline_object_1:
      properties:
        text:
          description: This is the actual content of the _DSTNote_
          example: This is the new privacy policy.
          type: string
      type: object
    DSTSigningAddressResponse:
      example:
        url: https://web.sandbox.signingtoday.com/dst/da789cfe-4a8f-42d1-a34e-adc6908d6956
      properties:
        url:
          example: https://web.sandbox.signingtoday.com/dst/da789cfe-4a8f-42d1-a34e-adc6908d6956
          type: string
    UsersGetResponse:
      example:
        values:
        - role: signer
          capabilities:
          - user.create.all
          - user.create.all
          extraData:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          groups:
          - domain: bit4id
            name: Marketing BU
            id: 1
          - domain: bit4id
            name: Marketing BU
            id: 1
          automatic: false
          language: en
          createdAt: 2007-04-02T19:30:10Z
          deletedAt: 2007-04-02T19:30:10Z
          phone: +013392213450
          createdBy: 9a608f1a-e42a-4d05-8e2b-1df8ec63cd5d
          surname: Doe
          domain: bit4id
          name: John
          id: e6419924-fd1d-4c42-9fa2-88023461f5df
          email: john.doe@email.com
          username: jdo
        - role: signer
          capabilities:
          - user.create.all
          - user.create.all
          extraData:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          groups:
          - domain: bit4id
            name: Marketing BU
            id: 1
          - domain: bit4id
            name: Marketing BU
            id: 1
          automatic: false
          language: en
          createdAt: 2007-04-02T19:30:10Z
          deletedAt: 2007-04-02T19:30:10Z
          phone: +013392213450
          createdBy: 9a608f1a-e42a-4d05-8e2b-1df8ec63cd5d
          surname: Doe
          domain: bit4id
          name: John
          id: e6419924-fd1d-4c42-9fa2-88023461f5df
          email: john.doe@email.com
          username: jdo
        count: 1
      properties:
        count:
          example: 1
          format: int64
          type: integer
        values:
          items:
            $ref: '#/components/schemas/User'
          type: array
    CreateUserRequest:
      example:
        password: A12345678z
        user:
          role: signer
          capabilities:
          - user.create.all
          - user.create.all
          extraData:
            st_uuid: d6ebb1ed-73a4-45ba-b33a-7db8a6cdd882
          groups:
          - domain: bit4id
            name: Marketing BU
            id: 1
          - domain: bit4id
            name: Marketing BU
            id: 1
          automatic: false
          language: en
          createdAt: 2007-04-02T19:30:10Z
          deletedAt: 2007-04-02T19:30:10Z
          phone: +013392213450
          createdBy: 9a608f1a-e42a-4d05-8e2b-1df8ec63cd5d
          surname: Doe
          domain: bit4id
          name: John
          id: e6419924-fd1d-4c42-9fa2-88023461f5df
          email: john.doe@email.com
          username: jdo
      properties:
        user:
          $ref: '#/components/schemas/User'
        password:
          description: |
            This represents the password the user will use to login from the web interface. If the field is omitted the email address provided during the creation of the user will receive an email with a link from where will be possible to set a password
          example: A12345678z
          type: string
      required:
      - user
      title: CreateUserRequest
      type: object
    UserGroupGetResponse:
      example:
        values:
        - domain: bit4id
          name: Marketing BU
          id: 1
        - domain: bit4id
          name: Marketing BU
          id: 1
        count: 1
      properties:
        count:
          example: 1
          format: int64
          type: integer
        values:
          items:
            $ref: '#/components/schemas/UserGroup'
          type: array
    inline_object_2:
      properties:
        file:
          description: The path of the file to upload
          format: binary
          type: string
        filename:
          description: The name of the file
          example: contract.pdf
          type: string
        resourceType:
          description: The type of the resource
          enum:
          - PDF_Document
          - Image
          example: PDF_Document
          type: string
        title:
          description: User-defined title of the resource
          example: Sales Contract
          type: string
      required:
      - file
      - filename
      - resourceType
      type: object
    inline_object_3:
      properties:
        file:
          description: The file to upload
          format: binary
          type: string
        filename:
          description: The name of the file
          example: contract.pdf
          type: string
        resourceType:
          enum:
          - PDF_Document
          example: PDF_Document
          type: string
        title:
          description: User-defined title of the resource.
          example: Sales Contract
          type: string
      required:
      - file
      - filename
      - resourceType
      type: object
    _robot__id__instantiate_rolesMapping:
      properties:
        roleName:
          description: The role indicated into the template
          example: Buyer
          format: string
          type: string
        signer:
          $ref: '#/components/schemas/SignerInstance'
    InstantiateDSTTemplate:
      example:
        templatePatches:
          template: false
          publicTemplate: false
          ccGroups:
          - Marketing
          - Marketing
          ccUsers:
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          - 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          documents:
          - signerGroups:
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            signatureRequests:
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            resource:
              filename: contract.pdf
              source:
                sourceURL: http://example.com/aeiou
                embeddedData: ""
                type: Embedded
              title: Sales Contract
              resourceType:
              - PDF_Document
              - PDF_Document
            forms:
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
          - signerGroups:
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            - signers:
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              - role: buyer
                _instance_id: 1
                phone: +013392213450
                surname: Smith
                name: Adam
                templateLabel: Buyer
                id: 1
                userUUID: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
                email: adam.smith@email.com
              _instance_id: 1
            signatureRequests:
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            - signProfile: PAdES
              reason: As the Buyer
              signerId: 2
              _instance_id: 1
              declinable: false
              extraData:
                st_ticketUrl: http://signing.today/ticket/8bd4aead-ad37-42bc-b3b0-22ce3d1c9e79
              withTimestamp: true
              description: The proponent
              restrictions:
              - rule: rule
                value: value
                operator: operator
              - rule: rule
                value: value
                operator: operator
              id: 3
            resource:
              filename: contract.pdf
              source:
                sourceURL: http://example.com/aeiou
                embeddedData: ""
                type: Embedded
              title: Sales Contract
              resourceType:
              - PDF_Document
              - PDF_Document
            forms:
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
            - _instance_id: 1
              extraData:
                signatureRequestId: 1
              invisible: true
              filled: false
              type: SignatureForm
              positionX: 100.00
              positionY: 58.14
              toFill: true
              signerId: 1
              width: 10.1
              documentId: 3
              id: 2
              page: 1
              height: 5.66
          title: Real estate sales contract transaction
          urgent: false
          expiresAt: 2007-04-25T12:00:00Z
          status: toSign
          tags:
          - important
          - important
        rolesMapping:
          buyer:
            email: adam.smith@example.co.uk
      properties:
        templatePatches:
          $ref: '#/components/schemas/CreateDigitalSignatureTransaction'
        rolesMapping:
          description: Indicates the mapping between the role specified into the template
            and the actual signer have to sign the _Digital Signature Transaction_
          example:
            buyer:
              email: adam.smith@example.co.uk
          items:
            $ref: '#/components/schemas/_robot__id__instantiate_rolesMapping'
          type: array
      title: InstantiateDSTTemplate
      type: object
    inline_object_4:
      properties:
        currentPassword:
          description: The current password of the user
          example: a12345678Z
          type: string
        newPassword:
          description: The new password choosen
          example: 0abcdefgH9
          type: string
      type: object
    inline_object_5:
      properties:
        domain:
          description: SAML domain
          example: bit4id
          type: string
        IDToken1:
          description: The BASE64-encoded SAML Reply in JSON
          example: PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIElEPSJSZDkwYTY5NDg1YTdiMmMxYjM0NWFjOGQ1Y2UyZmExMzFkZmRkMzRlOSIgVmVyc2lvbj0iMi4wIiBJc3N1ZUluc3RhbnQ9IjIwMTYtMDMtMTdUMjI6NTA6MzBaIiBEZXN0aW5hdGlvbj0iaHR0cHM6Ly97c3ViZG9tYWlufS5mYWNlYm9vay5jb20vd29yay9zYW1sLnBocCI+P...
          type: string
        IDToken2:
          description: The Hex-encoded HMAC-SHA256 of the decoded IDToken1
          example: f7bc83f430538424b13298e6aa6fb143ef4d59a14946175997479dbc2d1a3cd8
          type: string
      required:
      - IDToken1
      - IDToken2
      - domain
      type: object
    InlineObject:
      example: '[{"eduPersonPrincipalName":"vpa@infn.it","isMemberOf":["i:infn:cnaf:sistema_informativo::n:member","i:infn:cnaf:servizio_amministrazione::n:member"],"orgRole":"signer"}]'
      properties:
        eduPersonPrincipalName:
          description: The username of the account
          example: jdo@email.com
          type: string
        isMemberOf:
          description: Memberships of the user
          items:
            example: i:bit:R_D:system_network::n:member
            type: string
          type: array
        givenName:
          description: First name of the user
          example: John
          type: string
        surname:
          description: Last name of the user
          example: Doe
          type: string
        orgRole:
          description: The role of the user in the organization
          enum:
          - admin
          - instructor
          - signer
          example: signer
          type: string
    UserSyncReport_users:
      example:
        deleted: 1
        inserted: 2
        updated: 1
      properties:
        deleted:
          example: 1
          format: int32
          type: integer
        inserted:
          example: 2
          format: int32
          type: integer
        updated:
          example: 1
          format: int32
          type: integer
    UserSyncReport:
      example:
        users:
          deleted: 1
          inserted: 2
          updated: 1
      properties:
        users:
          $ref: '#/components/schemas/UserSyncReport_users'
    inline_object_6:
      properties:
        deviceId:
          description: Unique reference to the device
          example: 1ca229c8-2a99-4f3e-9421-36377fd8d9e5
          type: string
        token:
          description: The token to register
          example: c84c1180-3bdf-44e0-afee-1e255c7ab88f
          type: string
      type: object
    TrustedDevicesGetResponse:
      example:
        values:
        - _instance_id: 1
          name: John Doe"s Iphone
          registeredAt: 2021-10-17T07:26:00Z
          userId: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          deviceId: e6419924-fd1d-4c42-9fa2-88023461f5df
        - _instance_id: 1
          name: John Doe"s Iphone
          registeredAt: 2021-10-17T07:26:00Z
          userId: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          deviceId: e6419924-fd1d-4c42-9fa2-88023461f5df
        count: 1
      properties:
        count:
          example: 1
          format: int64
          type: integer
        values:
          items:
            $ref: '#/components/schemas/TrustedDevice'
          type: array
    DeviceAuthorizationResponse:
      description: Authorization challenge object
      example:
        baseURL: https://web.sandbox.signingtoday.com/api/challenge
        challenge: 8df173c3bcd4274715491fc196705da8
        userId: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
      properties:
        userId:
          example: 737dc132-a3f0-11e9-a2a3-2a2ae2dbcce4
          format: uuid
          type: string
        baseURL:
          example: https://web.sandbox.signingtoday.com/api/challenge
          type: string
        challenge:
          description: the challenge to be used to register the device.
          example: 8df173c3bcd4274715491fc196705da8
          type: string
    inline_object_7:
      properties:
        challenge:
          description: The challenge to be used to register the device
          example: 2a12618a-4128-11ea-b77f-2e728ce88125
          format: uuid
          type: string
        deviceId:
          description: The id of the device
          example: 123e4567-e89b-12d3-a456-556642440000
          type: string
        name:
          description: An arbitrary name to be assigned to the device
          example: John Doe"s iPhone
          type: string
      type: object
    inline_object_8:
      properties:
        example1:
          example: example1
          type: string
      type: object
    OrganizationsGetResponse:
      example:
        values:
        - settings:
            defaultDSTExpire_days: 30
            defaultLanguage: it
            alfrescoProperties:
              password: password
              baseNodeId: baseNodeId
              basePath: basePath
              relativePath: relativePath
              type: rest
              enabled: false
              username: username
          deletedAt: 2007-04-02T19:30:10Z
          contactEmail: contactEmail
          nation: nation
          city: city
          publicSettings:
            logoPath: logoPath
          name: name
          privateSettings:
            tags:
            - important
            - urgent
          emailOverrideFolderPath: emailOverrideFolderPath
          id: id
          contactPhone: contactPhone
        - settings:
            defaultDSTExpire_days: 30
            defaultLanguage: it
            alfrescoProperties:
              password: password
              baseNodeId: baseNodeId
              basePath: basePath
              relativePath: relativePath
              type: rest
              enabled: false
              username: username
          deletedAt: 2007-04-02T19:30:10Z
          contactEmail: contactEmail
          nation: nation
          city: city
          publicSettings:
            logoPath: logoPath
          name: name
          privateSettings:
            tags:
            - important
            - urgent
          emailOverrideFolderPath: emailOverrideFolderPath
          id: id
          contactPhone: contactPhone
        count: 0
      properties:
        count:
          format: int64
          type: integer
        values:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
    inline_object_9:
      properties:
        file:
          description: The file to upload.
          format: binary
          type: string
      required:
      - file
      type: object
    RobotConfiguration_authentication:
      description: The data the application will use to authenticate itself wherever
        there will be the need, for example in order to access to a resource
      example:
        authMode: basic
        clientCert: <client certificate>
        password: A12345678z
        clientKey: clientKey
        username: jdo
      properties:
        username:
          description: The username for the authentication
          example: jdo
          format: string
          type: string
        password:
          description: The password for the authentication
          example: A12345678z
          format: string
          type: string
        authMode:
          description: The type of authentication
          enum:
          - basic
          - digest
          example: basic
          format: string
          type: string
        clientKey:
          description: Client key
          example: clientKey
          format: string
          type: string
        clientCert:
          description: Client certificate
          example: <client certificate>
          format: string
          type: string
    RobotConfiguration_webhooks:
      description: The webhook where the notifications have to be send
      example:
        dst: https://web.sandbox.signingtoday.com
      properties:
        dst:
          description: Actual _URL_
          example: https://web.sandbox.signingtoday.com
          format: url
          type: string
    CreateDocumentSource:
      example:
        sourceURL: http://example.com/aeiou
        embeddedData: ""
        type: Embedded
      properties:
        type:
          enum:
          - Embedded
          - URL
          example: Embedded
          type: string
        embeddedData:
          format: binary
          type: string
        sourceURL:
          format: url
          type: string
    CreateDocument_resource:
      description: The actual resource (e.g. a pdf file)
      example:
        filename: contract.pdf
        source:
          sourceURL: http://example.com/aeiou
          embeddedData: ""
          type: Embedded
        title: Sales Contract
        resourceType:
        - PDF_Document
        - PDF_Document
      properties:
        filename:
          example: contract.pdf
          type: string
        resourceType:
          enum:
          - PDF_Document
          items:
            example: PDF_Document
            type: string
          type: array
        title:
          example: Sales Contract
          type: string
        source:
          $ref: '#/components/schemas/CreateDocumentSource'
    Identity_providerData_tokenInfo:
      example:
        serialNumber: "7430010005961358"
        ulTotalPublicMemory: 80000
        ulTotalPrivateMemory: 80000
        ulMinPinLen: 4
        manufacturerID: Bit4id
        flags: 1037
        model: JS2048 (LB)
        ulFreePrivateMemory: 41168
        label: CNS
        ulFreePublicMemory: 41168
        ulMaxPinLen: 8
      properties:
        ulMinPinLen:
          example: 4
          type: number
        manufacturerID:
          example: Bit4id
          type: string
        ulFreePublicMemory:
          example: 41168
          type: number
        serialNumber:
          example: "7430010005961358"
          type: string
        ulTotalPublicMemory:
          example: 80000
          type: number
        label:
          example: CNS
          type: string
        flags:
          example: 1037
          type: number
        ulTotalPrivateMemory:
          example: 80000
          type: number
        model:
          example: JS2048 (LB)
          type: string
        ulFreePrivateMemory:
          example: 41168
          type: number
        ulMaxPinLen:
          example: 8
          type: number
    Identity_providerData:
      example:
        smartcardID: -1121978858
        middlewareID: bit4xpki
        reader: Generic Smart Card Reader Interface 0
        tokenInfo:
          serialNumber: "7430010005961358"
          ulTotalPublicMemory: 80000
          ulTotalPrivateMemory: 80000
          ulMinPinLen: 4
          manufacturerID: Bit4id
          flags: 1037
          model: JS2048 (LB)
          ulFreePrivateMemory: 41168
          label: CNS
          ulFreePublicMemory: 41168
          ulMaxPinLen: 8
        ATR: 3bff1800008131fe55006b02090403010101434e5310318065
      properties:
        smartcardID:
          example: -1121978858
          type: number
        middlewareID:
          example: bit4xpki
          type: string
        ATR:
          example: 3bff1800008131fe55006b02090403010101434e5310318065
          type: string
        tokenInfo:
          $ref: '#/components/schemas/Identity_providerData_tokenInfo'
        reader:
          example: Generic Smart Card Reader Interface 0
          type: string
    SAMLToken_eduPersonTargetedID:
      properties:
        name:
          example: 3f82cfcd62cc07d64c1386cebbb6dd3af3a512da
          type: string
        format:
          example: urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
          type: string
      required:
      - format
      - name
    OrganizationPrivateSettings:
      example:
        tags:
        - important
        - urgent
      properties:
        tags:
          example:
          - important
          - urgent
          items:
            type: string
          type: array
    OrganizationPublicSettings:
      example:
        logoPath: logoPath
      properties:
        logoPath:
          type: string
    OrganizationSettings_alfrescoProperties:
      example:
        password: password
        baseNodeId: baseNodeId
        basePath: basePath
        relativePath: relativePath
        type: rest
        enabled: false
        username: username
      properties:
        enabled:
          default: false
          type: boolean
        type:
          enum:
          - rest
          - cmis
          type: string
        username:
          type: string
        password:
          type: string
        basePath:
          type: string
        relativePath:
          type: string
        baseNodeId:
          type: string
    OrganizationSettings:
      example:
        defaultDSTExpire_days: 30
        defaultLanguage: it
        alfrescoProperties:
          password: password
          baseNodeId: baseNodeId
          basePath: basePath
          relativePath: relativePath
          type: rest
          enabled: false
          username: username
      properties:
        defaultDSTExpire_days:
          default: 30
          example: 30
          format: int32
          type: integer
        defaultLanguage:
          enum:
          - it
          - en
          - es
          - fr
          type: string
        alfrescoProperties:
          $ref: '#/components/schemas/OrganizationSettings_alfrescoProperties'
    SignatureStatusChangedNotification_dst:
      properties:
        id:
          example: 20b772dc-5ec2-4ae0-9c06-95238d40c6bc
          format: uuid
          type: string
        title:
          example: ccvb
          type: string
    SignatureStatusChangedNotification_document:
      properties:
        display_name:
          example: Sample
          type: string
        id:
          format: int32
          type: integer
        order:
          example: 0
          format: int32
          type: integer
      required:
      - display_name
      - id
      - order
  securitySchemes:
    OAuth2:
      flows:
        password:
          scopes:
            all: All Scopes
            signer: Grants read access
            admin: Grants read to an admin
          tokenUrl: https://web.sandbox.signingtoday.com/api/oauth/token
      type: oauth2
    Basic:
      scheme: basic
      type: http
